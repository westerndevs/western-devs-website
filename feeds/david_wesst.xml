<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Western Devs</title>
  
  <link href="/feeds/david_wesst" rel="self" type="application/atom+xml"/>
  <link href="https://westerndevs.com" rel="alternate" type="application/atom+xml"/>
  
  <updated>2022-11-17T15:17:14.416Z</updated>
  <id>https://westerndevs.com/</id>
  
  <author>
    <name>Western Devs</name>
	<uri>https://westerndevs.com</uri>
    <email>info@westerndevs.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title type="html">How much is enough documentation?</title>
    <link href="https://westerndevs.com/_/how-much-is-enough-documentation/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/how-much-is-enough-documentation/</id>
    <published>2022-11-10T22:00:00.000Z</published>
    <updated>2022-11-17T15:17:14.416Z</updated>
	<author>
	
	  
	  <name>David Wesst</name>
	  <email>questions@davidwesst.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>Documentation takes a lot of different forms. Decision requests, diagrams, and just plain ol' word filled documents. Historically speaking, I have been guilty of being that developer that loathed documentation, waited until the last minute, and usually produced something that won't provide much help when it is actually needed.</p><p>Being a solution architect during the day, I wanted to apply some of my new found skills (and appreciation) for documentation while <a href="https://github.com/davidwesst/website/blob/main/CHANGELOG.md" target="_blank" rel="noopener">working on v10 of my website</a>. Ultimately, documentation is <em>necessary</em>, even on personal projects. If I think back to my own experience with my own projects, they can end up sitting on the shelve for a long time. When go back to revisit it, other than analyzing my own code (on prototype stuff) can be a serious time sink to even get things in a running state without any decent documentation.</p><h2>What do you <em>need</em>?</h2><p>And I do mean <em>needed</em> not <em>wanted</em>. Everyone <em>wants</em> documentation of all kinds, but what does an audience of one (i.e., your future self) <em>need</em> to get the project back off the shelve and into working order?</p><p>Like any good solution architect, I started to read, learn, and figure out what others consider &quot;enough documentation&quot; or &quot;good documentation&quot;. I also spent time defining the problem I needed the documentation to solve, and landed on the following docs being &quot;enough&quot;.</p><h3>The README</h3><p>It might seem obvious but, I have read enough of my own empty or default <code>README.md</code> files to know that this is easily the most important piece of documentation you write. Without it, the project will require code analysis to figure out what it <em>actually</em> is, and that is never good.</p><p>There are a lot of great examples <code>README.md</code> files on GitHub to look at, but I would suggest you start simple if you're just getting off the ground. My take was to include system requirements and the steps to setup, build, and start the project for the developer.</p><p>When searching for info on this, I really like <a href="https://www.freecodecamp.org/news/how-to-write-a-good-readme-file/" target="_blank" rel="noopener">this article from Hillary Nyakundi</a> provided a great &quot;how-to&quot; on making a good <code>README.md</code>.</p><h3>Decisions (also known as ADs or Architecture Decisions)</h3><p>This is one I picked up from my day job being a Solution Architect in a large enterprise. Decisions you make along the way need to be documented, even if it is only for yourself.</p><p>The idea is to document decisions that will have a long term impact on your project. Decided to document decisions? That can be documented. Decided that you only want your project to run on Azure? That can be documented. Decided to design your solution around a specific pattern? That can be documented.</p><p>You can document as many or as few decisions as you want. In the case of my website project, <a href="https://github.com/davidwesst/website/tree/main/docs/decisions" target="_blank" rel="noopener">I documented a few core decisions early on</a> because I wanted to remember <em>why I built it this way</em>. Even though I am adding content regularly and tweaking features frequently enough, I could shelve the development at any point.</p><p>In terms of format, there are plenty of ways to document decisions and why it is important, but I am not going to spend time explaining that. Instead I would recommend reading <a href="https://adr.github.io" target="_blank" rel="noopener">how GitHub documents decisions</a>. That is where I started, and they have a great breakdown of the different format and tools that can support you, if you're inclined to get into the tooling.</p><p>For the website, I <a href="https://github.com/davidwesst/website/blob/main/docs/decisions/0001-decisions-with-madr.md" target="_blank" rel="noopener">decided to use MADR as my decision document template</a> and documented &quot;why&quot; I chose it as the first decision for the project and <a href="https://github.com/davidwesst/website/blob/main/docs/decisions/0001-decisions-with-madr.md" target="_blank" rel="noopener">documented it</a>.</p><h3>Diagrams</h3><p>The last bit of documentation I feel I <em>need</em> (although it is not as important as the previous two) are solution diagrams.</p><p>Just like decision documentation, this is something that can take a lot of different forms. Personally, I am not a huge fan of diving into UML or any of the traditional diagram styles. I like diagrams that present well to multiple audiences and explain <em>one thing</em> well.</p><p><img src="/images/2022-11-10-how-much-is-enough-documentation/website-solution-overview.png" alt="A solution diagram example from the website project"></p><p>The above diagram is one I created to explain how I setup all the pieces inside of Microsoft Azure to host my website. The diagram answers the question &quot;What is necessary to host your application?&quot; which goes beyond the code in my case.</p><p>There is no real format that I applied here, but I scoped it to focus on the Azure Infrastructure and service I needed to rebuild the solution in Azure from scratch. Almost like a high-level guide to explain all the different pieces that need to be setup and handled.</p><p>In regards to diagram formatting, although I did not use it in this example, the <a href="https://c4model.com" target="_blank" rel="noopener">C4 model</a> is something I have been messing around with to describe systems and projects in my day job. If you need a little direction, or are struggling to figure out &quot;how to diagram&quot; your project, it might be worth a look.</p><h3>Notable Mention: <code>CHANGELOG.md</code></h3><p>I wanted to highlight this, but also point out that it is definitely not required. A <code>CHANGELOG.md</code> allows you to document your progress.</p><p>I based <a href="https://github.com/davidwesst/website/blob/main/CHANGELOG.md" target="_blank" rel="noopener">my CHANGELOG file</a> off of the format described at <a href="https://keepachangelog.com/en/1.0.0/" target="_blank" rel="noopener">keepachangelog.com</a>. It forced me to take a bit of time (really, like 15 minutes or so) to reflect on my effort and appreciate the effort I have put into the project. Plus, it tells the story of how the project has evolved over time; which, just like the decisions, provides context on how things got to where they are.</p><h2>Conclusion / TL;DR;</h2><p>In short, the documentation I <em>need</em> (not <em>want</em>) consists of the following, with the following priority:</p><ol><li><code>README.md</code> (that at least says how to setup, build, and run the project)</li><li>Decisions (using <a href="https://adr.github.io" target="_blank" rel="noopener">MADR</a> or some other format of your choosing)</li><li>Solution Diagrams (that answer <em>one specific question</em>)</li><li><code>CHANGELOG.md</code> (not required, but provides more context and forces you to appreciate the effort you have put into your project)</li></ol><p>Thanks for playing.</p><p>~ DW</p>]]></content>
    
    <summary type="html">
    
      Documentation is important, but it takes a lot of time and if you are a solo developer, what documentation to you really need? Still, good docs can provide the context I forget after putting a project on the shelf, or explains how to fix something in older code I use, but haven&#39;t touched in a long time. So how much is &#39;enough&#39; documentation and what types of documentation do I need to invest in give my future self the the best value for the effort I put in?
    
    </summary>
    
    
      <category term="madr" scheme="https://westerndevs.com/tags/madr/"/>
    
      <category term="c4-model" scheme="https://westerndevs.com/tags/c4-model/"/>
    
      <category term="decision" scheme="https://westerndevs.com/tags/decision/"/>
    
      <category term="diagram" scheme="https://westerndevs.com/tags/diagram/"/>
    
      <category term="documentation" scheme="https://westerndevs.com/tags/documentation/"/>
    
      <category term="README.md" scheme="https://westerndevs.com/tags/README-md/"/>
    
      <category term="CONTRIBUTING.md" scheme="https://westerndevs.com/tags/CONTRIBUTING-md/"/>
    
  </entry>
  
  <entry>
    <title type="html">How to fork (a repo) like a boss!</title>
    <link href="https://westerndevs.com/_/how-to-fork-like-a-boss/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/how-to-fork-like-a-boss/</id>
    <published>2022-11-02T21:00:00.000Z</published>
    <updated>2022-11-17T15:17:14.416Z</updated>
	<author>
	
	  
	  <name>David Wesst</name>
	  <email>questions@davidwesst.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>My name is David Wesst and today I am going to teach you to fork like a boss! No special tools. No special creams. Just your clicking finger and a bit of confidence to use your coding skills.</p><p>Before I forked, I thought I forking wasn't for me. I thought, I am too old to fork, but man oh man was I wrong. But then came the day where a library I was using was missing a critical feature, and a quick search through the repository issues found <a href="https://github.com/solution-loisir/markdown-it-eleventy-img/issues/8" target="_blank" rel="noopener">that others were looking for that feature too</a>.</p><p><img src="/images/2022-11-02-how-to-fork-like-a-boss/gh-issue.jpg" alt="Screenshot of GitHub issue with title &amp;quot;Question about whether the relative path is base on current working dir or current md file?&amp;quot; with the first entry in the issue describing how their blog posts have images in the same directory as the post"></p><h2>Choosing to Fork</h2><p>This is the moment where I got to choose. I had a options for my next move:</p><ol><li>Add to the thread and hope for the best</li><li>Built my own solution from scratch</li><li>Take a look through the code and see if its forkable</li></ol><p>The first choice makes sense if you don't have the knowledge or skills.</p><p>The second choice feels easier, but that is only your fear of contributing getting the best of you. When you add to your codebase, you are adding more code to support in the long run and all comes with that.</p><p>The last choice might make you nervous of you haven't forked in a long time, but I assure you, if you can code, you can fork. So browse through the code and see if you can find the spot your forking can help.</p><h2>Defining Forkability</h2><p>This is very subjective, but when it comes to forkable projects for me, I look for the following things, in this order:</p><ol><li><code>CONTRIBUTING.md</code>, to give me a breakdown on how the community wants people to contribute</li><li>Tests, so I know I can mess around with the code without breaking existing functionality</li><li>Existing Issues and Pull Requests (PRs) to see what users, developers, and project owners are currently working on and their focus.</li></ol><p>In my recent contribution to <a href="https://github.com/solution-loisir/markdown-it-eleventy-img" target="_blank" rel="noopener">markdown-it-eleventy-img</a>, I went through the repo trying to figure out whether or not it was forkable. Although I didn't find a <code>CONTRIBUTING.md</code> (<a href="https://github.blog/2012-09-17-contributing-guidelines/" target="_blank" rel="noopener">but that could be a future PR</a>) but I found a set of tests, and even though I forgot in the moment, there was an existing issue from someone else about the same issue I was hoping to contribute!</p><p>And with that, I knew this project was forkable. So I pulled out my finger and clicked &quot;FORK&quot; like boss and coded up my solution, and <a href="https://github.com/solution-loisir/markdown-it-eleventy-img/pull/9" target="_blank" rel="noopener">submitted a PR</a>.</p><h2>Fork with Confidence and Respect</h2><p>If you look through the <a href="https://github.com/solution-loisir/markdown-it-eleventy-img/pull/9" target="_blank" rel="noopener">thread of the PR</a> you'll see that my solution went through a few iterations and changes after receiving feedback from the project owner.</p><p>This was a great conversation and it lead to a better solution implementation than my original submission, which made me exceptionally happy (and proud) of my contribution.</p><p>Even though it is volunteer labour, remember that both you AND the project owner/admins are choosing to spend their time reviewing and analyzing your work. Everyone is involved in the fork is investing time, and everyone should be treated with respect and as a professional.</p><p>Plus—this is a great opportunity to level-up your development soft skills. Enjoy yourself, but be timely and respect the investment everyone is making.</p><h2>Conclusion / TL;DR;</h2><p>To fork like a boss, all you need is a project ready for contributions, some confidence, and respect for others on the project:</p><ol><li>A <code>CONTRIBUTING.md</code></li><li>Tests</li><li>Existing Issues and Pull Requests (PRs)</li></ol><p>Thanks for playing.</p><p>~ DW</p>]]></content>
    
    <summary type="html">
    
      Everyone thinks about forking. It is a natural thing, yet how do get the job done and fork? I used to ask myself the same thing, until I learned these pro-tips and forked like a boss.
    
    </summary>
    
    
      <category term="github" scheme="https://westerndevs.com/tags/github/"/>
    
      <category term="pull requests" scheme="https://westerndevs.com/tags/pull-requests/"/>
    
      <category term="contribution" scheme="https://westerndevs.com/tags/contribution/"/>
    
      <category term="open source" scheme="https://westerndevs.com/tags/open-source/"/>
    
  </entry>
  
  <entry>
    <title type="html">I Can Teach Your Dog Quantum Physics</title>
    <link href="https://westerndevs.com/finding-inspiration/i-can-teach-your-dog-quantum-physics/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/finding-inspiration/i-can-teach-your-dog-quantum-physics/</id>
    <published>2021-06-28T16:00:00.000Z</published>
    <updated>2022-11-17T15:17:14.416Z</updated>
	<author>
	
	  
	  <name>David Wesst</name>
	  <email>questions@davidwesst.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p><img src="/images/2021-06-28-i-can-teach-your-dog-quantum-physics/physics_dog_resized.jpg" alt="A hand holding the book How to teach physics to your dog by Chad Orzel"></p><p>Okay fine. Maybe I can't teach your dog quantum physics, but this book taught <em>me</em> something about quantum so that's something, right?</p><p>I finished <em>How to Teach Physics to your Dog</em> by Chad Orzel as I continue to dive deeper into my quest in understanding in quantum computing. This book was recommended by Mark Russonovich at the end of his Microsoft Ignite 2019 talked called <em>Quantum computing: Computing with a probabilistic universe with Mark Russinovich</em> at Microsoft Ignite 2019. You can watch at this link at the Microsoft Ignite site: <a href="https://myignite.microsoft.com/archives/IG19-BRK4011" target="_blank" rel="noopener">LINK</a>.</p><p>In short, it's pretty good.</p><p>It's solid way to understand some of the core of quantum mechanics that make quantum computing possible. It goes deeper just defining concepts like superposition, entanglement, and QED, but it also gets into a bit of the math and the history side of the concepts.</p><h1>The Highlights</h1><p>Now, I'm no book scientist and as such, I'm not going to worry about trying to put together a fancy book review that rates my experience. Instead, I thought it would be a good idea to highlight the parts of the book that made it a good read, and you can figure out the rest on your own.</p><h2>Dog Conversations</h2><p>Orzel jumps between explaining a concept traditionally to having a conversation with his dog (hense the title).</p><p>The style is kinda silly, which is something of a fresh take for explaining science, but it works surprisingly well.</p><p>Outside of helping to simplify some of the more complicated or mind bending points of quantum mechanics, or lightens the mood and makes it less of a &quot;physics book&quot; and more of a &quot;story about physics&quot;.</p><h2>A story that teaches you about physics</h2><p>I think the best part about the book is how it builds on each topic, chapter by chapter.</p><p>It reads like a story, where each chapter prepares you for the next until you finally hit the big wrap up on entanglement and QED, or quantum electrodynamics, along with a chapter on what to look for when people are trying to abuse quantum physics to push their own non-scientific agenda of making a quick buck.</p><h2>Mathy, but not too mathy</h2><p>Physics is math. That's just how it is, and this book does a great job of introducing us to the math, but not dwelling or depending on it. I appreciated that, especially near the end of the book where ideas like QED start to really bend your mind.</p><p>I appreciated how they didn't shy away from it and used the conversations with the dog to help bring it down to a &quot;not too mathy&quot; way. Keeps the reader in check and reminds them that this isn't just philosophy, but <em>real science</em>.</p><h1>TL;DR; / Conclusion</h1><p>This book set me up with a solid foundation on the physics that make quantum computing possible, which was the whole reason for reading it. It's &quot;learning through story and conversation&quot; approach that doesn't shy away from maths (but doesn't dwell on them) makes it an easier read than one might think.</p><p>Recommended for those interesting in understanding the <em>science</em> (not magic) of quantum physics that make quantum computing a real life thing.</p>]]></content>
    
    <summary type="html">
    
      It&#39;s true! I read a book about it and everything. Let me breakdown the highlights of this book that does a pretty good job of explaining the physics behind quantum computing.
    
    </summary>
    
      <category term="finding inspiration" scheme="https://westerndevs.com/categories/finding-inspiration/"/>
    
    
      <category term="quantum computing" scheme="https://westerndevs.com/tags/quantum-computing/"/>
    
      <category term="quantum physics" scheme="https://westerndevs.com/tags/quantum-physics/"/>
    
      <category term="finding inspiration" scheme="https://westerndevs.com/tags/finding-inspiration/"/>
    
      <category term="book" scheme="https://westerndevs.com/tags/book/"/>
    
      <category term="Mark Russinovich" scheme="https://westerndevs.com/tags/Mark-Russinovich/"/>
    
  </entry>
  
  <entry>
    <title type="html">What Value Does Making Content Bring to Me? (not a typo)</title>
    <link href="https://westerndevs.com/inner-monologue/what-value-does-making-content-bring-to-me/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/inner-monologue/what-value-does-making-content-bring-to-me/</id>
    <published>2021-06-17T16:00:00.000Z</published>
    <updated>2022-11-17T15:17:14.416Z</updated>
	<author>
	
	  
	  <name>David Wesst</name>
	  <email>questions@davidwesst.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p><img src="/images/2021-06-17-what-value-does-making-content-bring-to-me/rob-schreckhise-8zdEgWg5JAA-unsplash_altered.jpg" alt="A gorilla with in a pose that denotes they're thinking"></p><p>That's not to say the content should provide value to the reader, also known as you, but it's still a very important question to answer.</p><p>With the reboot of my blog and getting back into social media, this has become the first question I ask myself before writing a post, or planning a livestream, or scripting a video, or even saving a link. It's selfish, but if the post isn't valuable to me, then why would it be valuable to you?</p><p>In my previous professional life, the content I created with exclusively for the readers and for Microsoft. I made content, they awarded me an MVP award with some great perks, an awesome community, but it lead to an unforeseen need to be validated and rewarded for my content,  which I wrote about recently <a href="https://www.davidwesst.com/blog/my-secret-addiction-to-likes/" target="_blank" rel="noopener">LINK</a>. It was a good deal and made sense at the time. But that was then, and this is now. Now when I look at creating content, first person it needs to bring value to is me.</p><h2>So why bother blogging at all?</h2><p>I didn't.</p><p>At least I didn't for a few years and just left my blog and website to be a development science experiment. Reason being, I didn't know the value the blog could bring me.</p><p>I'll leave the numerous self-driven arguments and half baked reasons I tried to give myself out of it, but ultimately it didn't make a lot of sense to keep on blogging.</p><p>Until it did again.</p><h2>Sharing my Self-Retrospectives</h2><p>Even though I stopped blogging and stopped doing my annual self retrospectives (like this one from 2014: <a href="https://www.davidwesst.com/blog/highlight-reel-for-2014/" target="_blank" rel="noopener">LINK</a> and this one from 2015 <a href="https://www.davidwesst.com/blog/highlight-reel-for-2015/" target="_blank" rel="noopener">LINK</a>) the self-reflective process never stopped. Rather, my the self-retrospectives evolved into smaller chunks of thought that I would or share with trusted friends or family to get opinions on the deep thoughts from this inner monologue I maintained.</p><p>Then a pandemic started and I was unable to share, at least not with the frequency and ease that I used to.</p><h2>The Absence of Validation</h2><p><img src="/images/2021-06-17-what-value-does-making-content-bring-to-me/drahomir-posteby-mach-__Hw50q04FI-unsplash_updated.jpg" alt="Black and white image of the word 'yes' drawn in sand"></p><p>It's the inability to share the way I was used to got me thinking differently. I started to realize that sharing was my way to get approval and a pat on the head for an idea. I didn't need to take action with my website or my social media presence, because I already had a bunch of people tell me it was a good idea. Why bother doing it when I already got it validated?</p><p>And so I tested my theory and stopped sharing my ideas on social media. Not long after that, I stopped sharing my ideas with my trusted friends virtually (unless I had something to show, which I never did) not because I didn't want to, but because I needed to learn to do this for myself.</p><p><em>For me.</em></p><p>This means I am the first validator of the idea, and ultimately gives me that first bit of validation to approve my time investment into it. Of course the catch is, if I want futher validation, I suppose I should validate my own feelings first to make sure I'm right.</p><h2>If its valuable to me, then it'll be valuable to someone else (TL;DR;)</h2><p>Time is my most important asset. For that reason, the first question I ask the question: &quot;What value does <idea> it bring to me?&quot; as I need to decide if the idea is worth investing my time on it. If I don't see the value in it, the idea might not be bad, but it's just not for me. My time is better spent on an idea, post, or science experiment that I think will bring me value first.</p><p>Because if it brings me value, then there it will probably bring value to someone else out there on the internet.</p><p>Thanks for playing.</p><p>~ DW</p><hr><h5>Photo Credit</h5><p>Photo by <a href="https://unsplash.com/@robschreckhise?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Rob Schreckhise</a> on <a href="https://unsplash.com/s/photos/thinking?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Unsplash</a></p><p>Photo by <a href="https://unsplash.com/@postebymach?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Drahomír Posteby-Mach</a> on <a href="https://unsplash.com/s/photos/approved?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Unsplash</a></p>]]></content>
    
    <summary type="html">
    
      I realize it&#39;s a selfish question, but if the post isn&#39;t valuable to me then why would it be valuable to you?
    
    </summary>
    
      <category term="inner monologue" scheme="https://westerndevs.com/categories/inner-monologue/"/>
    
    
      <category term="blog" scheme="https://westerndevs.com/tags/blog/"/>
    
      <category term="defining value" scheme="https://westerndevs.com/tags/defining-value/"/>
    
      <category term="content creation" scheme="https://westerndevs.com/tags/content-creation/"/>
    
      <category term="self-retrospective" scheme="https://westerndevs.com/tags/self-retrospective/"/>
    
      <category term="validation" scheme="https://westerndevs.com/tags/validation/"/>
    
  </entry>
  
  <entry>
    <title type="html">My Secret Addiction to Likes</title>
    <link href="https://westerndevs.com/inner-monologue/my-secret-addiction-to-likes/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/inner-monologue/my-secret-addiction-to-likes/</id>
    <published>2021-06-03T16:00:00.000Z</published>
    <updated>2022-11-17T15:17:14.416Z</updated>
	<author>
	
	  
	  <name>David Wesst</name>
	  <email>questions@davidwesst.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>I decided to take a month off of contributing to social media. More specifically Twitter and YouTube, but Facebook and Instagram as well. That single month has turned into just over three months now, and I learned a few things about myself and how I think my return to <em>some</em> social media will be a good thing.</p><h1>Where it started...</h1><p>I'm a millennial. Which means, I've been doing social media since before it was called &quot;social media&quot;. I got onto Twitter very early on, I needed a university email address to create my Facebook account, and YouTube...well, it wasn't owned by Google.</p><p>The point being is that social media has been a part of my entire adult life. I actually can't rememberof a time in my professional life that someone wasn't telling me that my social media presence or &quot;brand&quot; had the ability to propel my career forward, if I played my tweets just right.</p><p>It is probably that every job I had in tech was surrounded by marketing people, but I developed this bizarre obsession over &quot;my brand&quot; or &quot;persona&quot; that I portrayed to the online world. For years I have gone through exercises about how to build followers, read the analytics, all on a mission to appear professional.</p><p>It wasn't a fruitless venture. I'm pretty sure my blog and Twitter account secured my many MVP awards. What I wasn't expecting was the dependency this obsession created, which was this weird addiction to &quot;likes&quot;.</p><h1>&quot;Likes&quot; = Validation</h1><p>You see, the MVP program was how I validated doing all the extra work on keeping up with technology. I love tech, I really really do, but had someone not pointed me in the direction of building a brand around JavaScript and/or Front-End Web Dev, I probably never would have gone down that road. As I built up that persona, th more likes and engagement I got, and the more likely the MVP Program would notice me. Eventually they did notice me and <em>TA-DA</em>, I became a Microsoft MVP.</p><p>The MVP Award was where I think this all started. It was a reward for being so...professional or knowledgable or hard-working in my B-time or whatever. I loved it and somehow rationalized that people get directly rewarded for their side efforts. I suppose that is sort of true, depending on how to define the term &quot;reward&quot;, but in general I don't think it's as big of a perk as the MVP Award and all the benefits that come with it.</p><p>As the years went by, I started to expect that sort of reward for my effort and equated with validation and started to <em>need</em> it in order feel like I was succeeding as a technology professional.</p><p>Then, I decided to let go of the MVP Award and chase my dreams.</p><h1>Validation Withdrawl</h1><p>This is the part in the story where I started chase my game development hopes and dreams. It started out well, but not long after doing some game development streams on Mixer (yeah, remember Mixer?) and some blog posts, I started to feel uneasy about my ability and my &quot;success&quot; as a technology professional.</p><p>Building an expertise takes time and effort. It takes even more time and effort when you day job doesn't care or need that expertise, and you have a new family to take care of. I kept getting caught up on how long it would take for me to &quot;become a professional&quot; or whatever. I kept checking my different social media analytics and started focusing a lot of time and energy on making game development content rather than actual games.</p><p>I resarched marketing techniques, read social media management guides, and started learning how to promote my &quot;dream game&quot; before I had even really done anything other than a couple of game jams. I checked the &quot;likes&quot; multiple times a day and tried to figure out how to maximize the reach of my content, continuing to get in the way of building an actual commercial video game, but searching (somewhat desperately) for that acknowledgement through likes, thumbs up, post engagement, and views.</p><p>It kept coming and going, but it would always block my progress on whatever project I was working on. My game jams were about the content I produced, not the game itself. After a jam, I would share and talk about &quot;the next steps&quot; and all the planning I was doing instead of <em>actually doing</em> something with the project. No matter how much time I spent, there wasn't enough to both &quot;share to the community&quot; and build a game.</p><p>It was an old habit that needed to go away, and so earlier this year I just stopped sharing on social media.</p><p>That break was supposed last about month. That was about three months ago.</p><h1>Realization and Return</h1><p>In my three month break, I looked inward and thought about what I've done with social media over...well, most of my professional life. I've decided that it's time to start figuring out how or if I should return to the social networks, but I'm taking it slow and flipping the script on my social media shares.</p><p>Rather than measuring my successwith likes and views, I'm looking at the social platforms as ways for me to grow personally and professionally. I'm asking myself two questions:</p><ol><li>What does my contribution do for the reader/viewer/you?</li><li>What does my contribution do for me?</li></ol><p>Does v7 of my website coincide with this? It sure does.</p><p>I'll elaborate further another day, but just writing this post helps me reflect on my own story. It feels honest and healthy to write all this down and I'm creating content for both  <em>me</em> and the readers. I share not only because I crave validation, but also think that my sharing my experience might help others learn something.</p><p>This is site and blog is the start. It has a purpose for both my personal and professional growth and so it is alive again.</p><h2>Aren't you just going to obsess over the analytics again?</h2><p>I don't think so. I have analytics enabled on the site, but I have purpose for this: to learn. More specifically, I want to learn about what analytics can teach me about my audience. It's not just about views and the likes, a but what the readers (and players) are telling me through their engagement.</p><p>Plus-- whether I like it or not, analytics plays a critical role in decision making these days. I see it in my day job, and I see it in game development. Either way, it's probably having some literacy around the different kinds of analytics out there can't hurt me.</p><p>The trick is not wrapping success around the metrics.</p><h1>Next Steps</h1><p>I think it's going to be YouTube and other video content like livestreams. I really enjoy making my little movies, and with the pandemic in full swing, it's hampered my ability to practice my presentation skills at conferences with an audience. Between platforms like YouTube, LinkedIn, Twitch , and even Discord, there are some good opportunities to sharpen my video presentation skills.</p><p>If I'm being honest, I can't see Twitter or Facebook making a comeback in my day-to-day life. Possibly a place to echo posts or share activity, but I'm just not feeling the &quot;hot takes&quot; nature that comes with Twitter and Facebook. As for Instagram...I'm still undecided. I don't have a lot of pictures to share behind the scenes, but again-- never say never.</p><p>Regardless of where I share content, the website will be hub and the question will the same: What does sharing do to help me grow personally and/or professionally?</p><p>Thanks for playing. ~ DW</p><hr><p><em>Photo Credit</em></p><p>Photo by <a href="https://unsplash.com/@neonbrand?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">NeONBRAND</a> on <a href="https://unsplash.com/s/photos/likes?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText" target="_blank" rel="noopener">Unsplash</a></p>]]></content>
    
    <summary type="html">
    
      I decided to take a month off of contributing to social media. More specifically Twitter and YouTube, but Facebook and Instagram as well. That single month has turned into just over three months now, and I learned a few things about myself and how I think my return to some social media will be a good thing.
    
    </summary>
    
      <category term="inner monologue" scheme="https://westerndevs.com/categories/inner-monologue/"/>
    
    
      <category term="social media" scheme="https://westerndevs.com/tags/social-media/"/>
    
      <category term="twitter" scheme="https://westerndevs.com/tags/twitter/"/>
    
      <category term="youtube" scheme="https://westerndevs.com/tags/youtube/"/>
    
      <category term="analytics" scheme="https://westerndevs.com/tags/analytics/"/>
    
      <category term="acceptance" scheme="https://westerndevs.com/tags/acceptance/"/>
    
  </entry>
  
  <entry>
    <title type="html">Lucky Number v7</title>
    <link href="https://westerndevs.com/technology/inner-monologue/lucky-number-v7/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/technology/inner-monologue/lucky-number-v7/</id>
    <published>2021-05-24T16:00:00.000Z</published>
    <updated>2022-11-17T15:17:14.416Z</updated>
	<author>
	
	  
	  <name>David Wesst</name>
	  <email>questions@davidwesst.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>I fixed up my blog-website-thingy again. I'm calling this v7, although I'm pretty sure there are a few incarnations of the site that were lost early on in my years, but v7 seems about right for the content I'm sharing here. In any case-- I thought I'd share the &quot;why&quot; around the new website revamp and how I think a project like this is just what I need.</p><h1>Why did you stop blogging, anyway?</h1><p>I've been thinking a lot about that lately, and the reason I stopped was that I didn't have a reason to do it anymore.</p><p>I started blogging because I was told that it was one of the things I <em>should be doing</em> and had to <em>keep doing</em> to get (and stay) in the Microsoft MVP program as a Front End Web Development MVP (formerly known as the Internet Explorer MVP program). Once I decided to leave the Front End Web Dev stuff behind to make way for my passion for video games and stuff, why should I bother blogging?</p><p>And so that was that. I stopped blogging and made way for all the video game development effort I could muster! Sure, there was the occassional link to a YouTube video or a little tech problem that I've solved on the side, but for the most part, it was dead.</p><p>0 commercial games later, and a few false restarts I'm back on the blog and the website...again.</p><h1>So why bother starting it up again?</h1><p>Well, I stopped because I gave up my reason to do so. I am starting because I found a reason: I want to share and learn.</p><p>Let's break that down a little:</p><h2>&quot;I want to&quot;</h2><p>That is probably the most important part of the whole reason. I want to make content. I'm feeling the need to do it. Maybe its habit or nostalgia for the days where creating content was part of keeping my professional status, either way it's something I like to do and the blog is a lightweight and easy way to do that.</p><h2>&quot;share&quot;</h2><p>Thinking back to when I blogged regularly as part of my MVP contribution, I didn't realize how much of a platform I had to share stories, advice, how-tos and whatever else. It really was quite the reach, and quite a privilege. My experience and work has changed a lot, but there is a still a lot to share for others.</p><p>The big difference this time around is that I'm not worried about whether or not it fits &quot;my career goals&quot; or my &quot;professional focus&quot;.  It's really about me putting my thoughts together in a cohesive way that might help someone reflect and make a decision. In getting v7 of the website ready <em>I was that &quot;someone&quot;</em> and looking over all my old posts confirmed that this is a good idea.</p><p>But, even if you (or me) don't find my posts helpful in the long or short term, that's okay. It feels good to get a post out there. There's a gratifying feeling that comes with putting a post together that helps me, and that makes it worth it too.</p><h2>&quot;learn&quot;</h2><p>As cliché as it sounds, I'm a life long learner. Content creation and management is something that keeps coming up in my side projects, and yet I've never taken the time to properly learn and understand how to do it. It's not about the marketing side, but rather what it means to contribute, learn, and engage with your audience as a solo content creator.</p><p>Plus, there are these weird &quot;little problems&quot; I've always had in my years of creating content with with MVP program. I'm hoping that with fresh eyes and new experiences with me, I can tackle these problems with a different perspective that I have in the past.</p><p>Ultimately, there is a lot to unpack here-- but assuming I keep this going, I'll continue to share what I learn, which will lead to more sharing and then more learning and...you see how this is good thing? :)</p><h2>The Point</h2><p>Scott Hanselman shared this idea <a href="https://www.hanselman.com/blog/do-they-deserve-the-gift-of-your-keystrokes" target="_blank" rel="noopener">(reference)</a> of valuing your effort in helping through your keystrokes (I'm greatly paraphrasing the idea). I spend time helping others one-on-one, but it's usually the same stories, ideas, thought patterns, and so on that people find helpful. This website and blog is my chance to share new things and old with a fresh perspective, one that is owned and driven by my values and ideas and not those of my employer or community.</p><p>Maybe its selfish to think this is a good idea, but that's fine because it's my website, my blog, and my idea that I think is good.</p><p>And if I think it's good, then that's a start.</p><p>Thanks for playing. ~ DW</p>]]></content>
    
    <summary type="html">
    
      I fixed up my blog-website-thingy again. I&#39;m calling this v7, although I&#39;m pretty sure there are a few incarnations of the site that were lost early on in my years, but v7 seems about right for the content I&#39;m sharing here. In any case-- I thought I&#39;d share the &quot;why&quot; around the new website revamp and how I think a project like this is just what I need.
    
    </summary>
    
      <category term="technology" scheme="https://westerndevs.com/categories/technology/"/>
    
      <category term="inner monologue" scheme="https://westerndevs.com/categories/technology/inner-monologue/"/>
    
    
      <category term="blog" scheme="https://westerndevs.com/tags/blog/"/>
    
      <category term="website" scheme="https://westerndevs.com/tags/website/"/>
    
      <category term="graphql" scheme="https://westerndevs.com/tags/graphql/"/>
    
  </entry>
  
  <entry>
    <title type="html">From Travis CI to GitHub Actions (and GitHub Pages)</title>
    <link href="https://westerndevs.com/devops/from-travis-ci-to-github-actions/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/devops/from-travis-ci-to-github-actions/</id>
    <published>2020-11-10T23:36:00.000Z</published>
    <updated>2022-11-17T15:17:14.416Z</updated>
	<author>
	
	  
	  <name>David Wesst</name>
	  <email>questions@davidwesst.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>We recently migrated the continuous integration and deployment workflow for the Western Devs website from Travis CI to GitHub Actions. These are the steps I followed to get it done.</p><a id="more"></a><p>Travis CI <a href="https://blog.travis-ci.com/2020-11-02-travis-ci-new-billing" target="_blank" rel="noopener">announced a new pricing model</a> that <em>could</em> have impact on open source projects that are using Travis for continuous integration and/or deployment. For static websites, like the <a href="https://westerndevs.com">Western Devs website</a> or <a href="https://www.davidwesst.com" target="_blank" rel="noopener">personal website</a>, this could result in getting some unforeseen costs. With that in mind, we decided to take the plunge an migrate away from Travis and over to <a href="https://docs.github.com/en/free-pro-team@latest/actions" target="_blank" rel="noopener">GitHub Actions</a> as they provide CI and CD workflows free for open source projects.</p><h2>TL;DR; -- Just show me the code</h2><p>Fine. <a href="https://github.com/westerndevs/western-devs-website/blob/master/.github/workflows/ci-cd.yml" target="_blank" rel="noopener">Here is is</a>. It is open source after all.</p><p>But just to be clear, this isn't a tutorial on how to code this up, rather its a walkthrough on what it took to get our <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a> based static site from Travis to GitHub Actions.</p><h2>Start with Mapping Out Your Workflow</h2><p>And I mean <em>workflow</em> and not just the build.</p><p>For the Western Devs, our workflow goes like this:</p><ol><li>Commit a change to the code (i.e. a new blog post)</li><li>Build the website</li><li>If master branch build is successful, deploy the build to production</li><li>Notify the Western Devs of the build result in Slack</li></ol><p>GitHub workflow provides everything we need to do this, and I'll walk you through the code, which you can see for yourself in <a href="https://github.com/westerndevs/western-devs-website/blob/master/.github/workflows/ci-cd.yml" target="_blank" rel="noopener">here in our GitHub repo</a>.</p><h3>1. Commit a change to the code (i.e. a new blog post)</h3><p>This is our trigger to start the workflow. That is represented by the <code>on</code> section of the YAML. In our case, we want to trigger the workflow every time there is a pull request created for the master branch, a push to the master branch (i.e. a merge), or a push to any other feature (ft) or hotfix (hf) branches.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">name:</span> <span class="string">CI/CD</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ft/*</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">hf/*</span></span><br><span class="line">  <span class="attr">pull_request:</span></span><br><span class="line">    <span class="attr">branches:</span> <span class="string">[</span> <span class="string">master</span> <span class="string">]</span></span><br></pre></td></tr></table></figure><p>Now we have a workflow that will trigger when we want to. Next, we need to actually build the website.</p><h3>2. Build the website</h3><p>Our build is exceptionally simple-- just generate the site, and if the generation is successful, the build was successful. To do this, we create a <code>build</code> job that handles the work.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Build</span> <span class="string">and</span> <span class="string">Deploy</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span> <span class="comment"># checkout the source code</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span> <span class="comment"># setup the environment</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">node-version:</span> <span class="number">12</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span> <span class="comment"># setup dependencies</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">run:</span> <span class="string">npm</span> <span class="string">run</span> <span class="string">build</span> <span class="comment"># run the build command</span></span><br></pre></td></tr></table></figure><p>The first two steps are using GitHub Actions provided by GitHub themselves. This pulls our source code and the sets up the Node environment that we need to build the website. Once that is done, we  <code>run</code> steps to run shell commands to install our project specific dependendies and run the build script itself.</p><p>The scripts have been defined in our <a href="https://github.com/westerndevs/western-devs-website/blob/master/package.json" target="_blank" rel="noopener">project <code>package.json</code> file</a> and are used by the developers to build the site locally as well.</p><h3>3. If master branch build is successful, deploy the build to production</h3><p>If we are talking about the master branch, we want to do a deployment if it is successful. For this step, we added a conditional expression using the <code>github</code> context that is provided to all actions. You can learn more about context and expressions for GitHub Actions in the <a href="https://docs.github.com/en/free-pro-team@latest/actions/reference/context-and-expression-syntax-for-github-actions#about-contexts-and-expressions" target="_blank" rel="noopener">GitHub Docs here</a>.</p><p>You might also see that were using an encrypted secret using the <code>secret.GITHUB_TOKEN</code> expression. All repositories have this feature in the settings section of the repo, and you can learn more about <a href="https://docs.github.com/en/free-pro-team@latest/actions/reference/encrypted-secrets" target="_blank" rel="noopener">creating encrypted secrets for a repository here</a> in the GitHub docs.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">to</span> <span class="string">GitHub</span> <span class="string">Pages</span></span><br><span class="line">  <span class="attr">if:</span> <span class="string">github.ref</span> <span class="string">==</span> <span class="string">'refs/heads/master'</span></span><br><span class="line">  <span class="attr">uses:</span> <span class="string">peaceiris/actions-gh-pages@v3</span></span><br><span class="line">  <span class="attr">with:</span></span><br><span class="line">    <span class="attr">github_token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GITHUB_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">    <span class="attr">cname:</span> <span class="string">westerndevs.com</span></span><br><span class="line">    <span class="attr">commit_message:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.event.head_commit.message</span> <span class="string">&#125;&#125;</span></span><br></pre></td></tr></table></figure><h4>BONUS: Free hosting with GitHub Pages</h4><p>In our case, our deployment target is <a href="https://pages.github.com/" target="_blank" rel="noopener">GitHub Pages</a> which provides free hosting and SSL certificates for open source static sites sites like ours.</p><p>We decided to take this opportunity to consilate everything under the GitHub umbrella because it saved us a couple of bucks, and now everything we need to manage the site is in one spot rather than spread across multiple cloud services.</p><h3>4. Notify the Western Devs of the build result in Slack</h3><p>Originally, we had forgotten this step and started to feel it right away. So an issue was created and I put a solution in place in about 15 minutes, thanks to someone else doing all the heavy lifting and publishing their work to the <a href="https://github.com/marketplace?type=actions" target="_blank" rel="noopener">GitHub Actions Marketplace</a>.</p><p>Slack supports incoming webhooks, even for for free workspaces. I set that up by following the <a href="https://api.slack.com/messaging/webhooks" target="_blank" rel="noopener">Slack documentation</a>, created another secret in our repository and voila, we were back in business wih the notifications.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Notify</span> <span class="string">Slack</span></span><br><span class="line">  <span class="attr">if:</span> <span class="string">always()</span></span><br><span class="line">  <span class="attr">uses:</span> <span class="string">8398a7/action-slack@v3</span></span><br><span class="line">  <span class="attr">with:</span></span><br><span class="line">    <span class="attr">status:</span> <span class="string">$&#123;&#123;</span> <span class="string">job.status</span> <span class="string">&#125;&#125;</span></span><br><span class="line">    <span class="attr">fields:</span> <span class="string">repo,message,commit,author,action,eventName,ref,workflow,job,took</span> <span class="comment"># selectable (default: repo,message)</span></span><br><span class="line">  <span class="attr">env:</span></span><br><span class="line">    <span class="attr">SLACK_WEBHOOK_URL:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.SLACK_WEBHOOK_URL</span> <span class="string">&#125;&#125;</span> <span class="comment"># required</span></span><br></pre></td></tr></table></figure><h2>Conclusion</h2><p>The combination of GitHub Actions and GitHub Pages provides every developer with the opportunity to get a taste of DevOps while actually producing something they can show off to their peers and community. Travis CI is, and will continue to be, a great CI/CD solution for developers...but if you're looking for a one-stop-shop for source control, workflow, and hosting. You can't really go wrong with GitHub.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;We recently migrated the continuous integration and deployment workflow for the Western Devs website from Travis CI to GitHub Actions. These are the steps I followed to get it done.&lt;/p&gt;
    
    </summary>
    
      <category term="devops" scheme="https://westerndevs.com/categories/devops/"/>
    
    
      <category term="github actions" scheme="https://westerndevs.com/tags/github-actions/"/>
    
      <category term="github workflow" scheme="https://westerndevs.com/tags/github-workflow/"/>
    
      <category term="travis ci" scheme="https://westerndevs.com/tags/travis-ci/"/>
    
      <category term="continuous integration" scheme="https://westerndevs.com/tags/continuous-integration/"/>
    
      <category term="continuous deployment" scheme="https://westerndevs.com/tags/continuous-deployment/"/>
    
  </entry>
  
  <entry>
    <title type="html">New Artwork and a Complete Rewrite...ish | Out the Door Devlog</title>
    <link href="https://westerndevs.com/devlog/out-the-door/out-the-door-post-jam-update/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/devlog/out-the-door/out-the-door-post-jam-update/</id>
    <published>2020-11-09T14:00:00.000Z</published>
    <updated>2022-11-17T15:17:14.416Z</updated>
	<author>
	
	  
	  <name>David Wesst</name>
	  <email>questions@davidwesst.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>My effort continues on Out the Door with some new artwork, a rewrite (of sorts) to fix the build process, which has led to something of a self-driven code review.</p><a id="more"></a><iframe width="560" height="315" src="https://www.youtube.com/embed/LLXO-6Pretk" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h2>Wanna Play?</h2><p>Sure you do! Head over to my <a href="https://davidwesst.itch.io/out-the-door" target="_blank" rel="noopener">davidwesst.itch.io/out-the-door</a> to give it a whirl in your browser (no install needed) or Windows! It's totally free, and feedback is always appreciated.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;My effort continues on Out the Door with some new artwork, a rewrite (of sorts) to fix the build process, which has led to something of a self-driven code review.&lt;/p&gt;
    
    </summary>
    
      <category term="devlog" scheme="https://westerndevs.com/categories/devlog/"/>
    
      <category term="out the door" scheme="https://westerndevs.com/categories/devlog/out-the-door/"/>
    
    
      <category term="game development" scheme="https://westerndevs.com/tags/game-development/"/>
    
      <category term="gamejam" scheme="https://westerndevs.com/tags/gamejam/"/>
    
      <category term="ludum dare" scheme="https://westerndevs.com/tags/ludum-dare/"/>
    
      <category term="ludum dare 47" scheme="https://westerndevs.com/tags/ludum-dare-47/"/>
    
      <category term="game design" scheme="https://westerndevs.com/tags/game-design/"/>
    
      <category term="out the door" scheme="https://westerndevs.com/tags/out-the-door/"/>
    
  </entry>
  
  <entry>
    <title type="html">A Solo Gamejam Experience | A Ludum Dare 47 Story</title>
    <link href="https://westerndevs.com/devlog/a-solo-gamejam-experience-ld47/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/devlog/a-solo-gamejam-experience-ld47/</id>
    <published>2020-10-23T13:00:00.000Z</published>
    <updated>2022-11-17T15:17:14.416Z</updated>
	<author>
	
	  
	  <name>David Wesst</name>
	  <email>questions@davidwesst.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>I submitted a game to <a href="https://ldjam.com/events/ludum-dare/47/out-the-door" target="_blank" rel="noopener">Ludum Dare 47</a> I call <a href="https://davidwesst.itch.io/out-the-door" target="_blank" rel="noopener">Out the Door (Play Now in your Browser)</a> as a solo, amateur game developer with a non-gamedev day job, family responsibilities, and household to maintain.</p><!-- more --><iframe width="560" height="315" src="https://www.youtube.com/embed/AFnGMS24qvg" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></content>
    
    <summary type="html">
    
      Wonder what it takes to be a solo amateur game developer in a global gamejam? DW summarizes his Ludum Dare 47 experience in this video.
    
    </summary>
    
      <category term="devlog" scheme="https://westerndevs.com/categories/devlog/"/>
    
    
      <category term="gamedev" scheme="https://westerndevs.com/tags/gamedev/"/>
    
      <category term="game development" scheme="https://westerndevs.com/tags/game-development/"/>
    
      <category term="devlog" scheme="https://westerndevs.com/tags/devlog/"/>
    
      <category term="gamejam" scheme="https://westerndevs.com/tags/gamejam/"/>
    
      <category term="ludum dare" scheme="https://westerndevs.com/tags/ludum-dare/"/>
    
      <category term="github gameoff" scheme="https://westerndevs.com/tags/github-gameoff/"/>
    
  </entry>
  
  <entry>
    <title type="html">Game Portfolio Self Evaluation (in prep for Ludum Dare 47)</title>
    <link href="https://westerndevs.com/devlog/game-portfolio-review-2020/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/devlog/game-portfolio-review-2020/</id>
    <published>2020-09-18T13:00:00.000Z</published>
    <updated>2022-11-17T15:17:14.416Z</updated>
	<author>
	
	  
	  <name>David Wesst</name>
	  <email>questions@davidwesst.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>Ludum Dare 47, a weekend long global gamejam, is coming up in a few weeks. In order to prep for the event, I decided to take the time for review and reflect on my game portfolio to see what I learning objective and goals I can set for myself.</p><iframe width="560" height="315" src="https://www.youtube.com/embed/V_zCHtZIsYw" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h2>My Portfolio</h2><p>What was that? You wanted to know where to find and play my games?! Well then, if you're inclined to try some of my games (and hopefully leave some feedback), here they are:</p><ul><li><a href="https://davidwesst.itch.io/vagabondgame" target="_blank" rel="noopener">Vagabond Game</a> -&gt; A top-down Unity based prototype where I learned the technical ropes of putting together a small, game experience, with narrative, graphics, and animation.</li><li><a href="https://davidwesst.itch.io/leaps-and-bounds" target="_blank" rel="noopener">Car Scientist</a> -&gt; My first gamejam submission and evolution of the Vagabond Game prototype, except this time built in Godot.</li><li><a href="https://davidwesst.itch.io/little-shop-of-wall-street" target="_blank" rel="noopener">Little Shop of Wall Street</a> -&gt; My Ludum Dare 46 submission, co-authored by <a href="https://westerndevs.com/bios/darcy_lussier/">D'Arcy Lussier</a> where you trade stocks online in order to feed an interesting plant, before it feeds on YOU!</li></ul>]]></content>
    
    <summary type="html">
    
      Ludum Dare 47, a weekend long global gamejam, is coming up in a few weeks. In order to prep for the event, I decided to take the time for review and reflect on my game portfolio to see what I learning objective and goals I can set for myself.
    
    </summary>
    
      <category term="devlog" scheme="https://westerndevs.com/categories/devlog/"/>
    
    
      <category term="gamedev" scheme="https://westerndevs.com/tags/gamedev/"/>
    
      <category term="game development" scheme="https://westerndevs.com/tags/game-development/"/>
    
      <category term="devlog" scheme="https://westerndevs.com/tags/devlog/"/>
    
      <category term="gamejam" scheme="https://westerndevs.com/tags/gamejam/"/>
    
      <category term="ludum dare" scheme="https://westerndevs.com/tags/ludum-dare/"/>
    
      <category term="github gameoff" scheme="https://westerndevs.com/tags/github-gameoff/"/>
    
  </entry>
  
  <entry>
    <title type="html">Release Notes for Little Shop of Wall Street 0.1.0-beta</title>
    <link href="https://westerndevs.com/devlog/little-shop-of-wall-street-01-release-notes/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/devlog/little-shop-of-wall-street-01-release-notes/</id>
    <published>2020-07-02T15:13:00.000Z</published>
    <updated>2022-11-17T15:17:14.416Z</updated>
	<author>
	
	  
	  <name>David Wesst</name>
	  <email>questions@davidwesst.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>Finally! The 0.1 beta has arrived for Little Shop of Wall Street!</p><p>In this video, DW walks through the new features rolled out both in-game and behind the scenes for his LD46 game jam title.</p><iframe width="560" height="315" src="https://www.youtube.com/embed/baMlNqGgiV4" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><p>You can play the game here on <a href="https://davidwesst.itch.io/little-shop-of-wall-street" target="_blank" rel="noopener">Itch.io</a>.</p><h2>Side Notes</h2><p>This release is an important one for me.</p><p>First, off it's the first &quot;beta&quot; release which I've categorized as a moderately stable release, and includes a &quot;complete gameplay loop&quot; on purpose. There are still plenty of bugs (as the video even showed) but it works and playable.</p><p>Second, this release is the original vision of what I pictured the gamejam submission to be when D'Arcy and I came up with the idea back in April. Many months later, I have that release which says a lot about my prototyping and experimenting process (i.e. I'm too slow).</p><p>Lastly, I have multiple versions of the game out there including Linux/X11 and Windows versions. There's still a lot more to learn and do with the while devops setup for my projects, but this is a great step forward and can be reused with all my Godot-based projects moving forward.</p><p>Until the next one-- thanks for playing.</p><p>~ DW</p>]]></content>
    
    <summary type="html">
    
      Little Shop of Wall Street has a 0.1-beta release!
    
    </summary>
    
      <category term="devlog" scheme="https://westerndevs.com/categories/devlog/"/>
    
    
      <category term="gamedev" scheme="https://westerndevs.com/tags/gamedev/"/>
    
      <category term="game development" scheme="https://westerndevs.com/tags/game-development/"/>
    
      <category term="devlog" scheme="https://westerndevs.com/tags/devlog/"/>
    
      <category term="little shop of wall street" scheme="https://westerndevs.com/tags/little-shop-of-wall-street/"/>
    
      <category term="godot" scheme="https://westerndevs.com/tags/godot/"/>
    
  </entry>
  
  <entry>
    <title type="html">How Github Makes Game Making Easier for Noncoders</title>
    <link href="https://westerndevs.com/Game-Design/How-GitHub-Makes-Game-Making-Easier-For-NonCoders/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/Game-Design/How-GitHub-Makes-Game-Making-Easier-For-NonCoders/</id>
    <published>2020-02-19T20:48:36.000Z</published>
    <updated>2022-11-17T15:17:14.416Z</updated>
	<author>
	
	  
	  <name>David Wesst</name>
	  <email>questions@davidwesst.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>DW goes through five things he's been using in Github while designing his latest prototype that require zero coding skills.</p><a id="more"></a><p>GitHub is a social development platform that will make your game development journey easier even if you're not a coder! We'll cover how GitHub can help keep your file history, through to how it can help organize your work, and even where to find cool projects to learn (and possibly contribute to).</p><iframe width="560" height="315" src="https://www.youtube.com/embed/rq0JDWnVt8I" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h2>References and Links</h2><h3>Github Desktop (Desktop Client)</h3><p>https://help.github.com/en/desktop</p><h3>Links to interesting game development &amp; design projects</h3><p>Tiled | https://github.com/bjorn/tiledInky | https://github.com/inkle/inkyOpenTDD | https://github.com/OpenTTD/OpenTTDMicropolisJS | https://github.com/graememcc/micropolisJS</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;DW goes through five things he&#39;s been using in Github while designing his latest prototype that require zero coding skills.&lt;/p&gt;
    
    </summary>
    
      <category term="Game Design" scheme="https://westerndevs.com/categories/Game-Design/"/>
    
    
      <category term="GitHub" scheme="https://westerndevs.com/tags/GitHub/"/>
    
      <category term="Game Development" scheme="https://westerndevs.com/tags/Game-Development/"/>
    
      <category term="Game Design" scheme="https://westerndevs.com/tags/Game-Design/"/>
    
      <category term="Video" scheme="https://westerndevs.com/tags/Video/"/>
    
  </entry>
  
  <entry>
    <title type="html">Jan 2020 Devlog</title>
    <link href="https://westerndevs.com/Devlog/Jan-2020-Devlog/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/Devlog/Jan-2020-Devlog/</id>
    <published>2020-02-04T21:03:24.000Z</published>
    <updated>2022-11-17T15:17:14.412Z</updated>
	<author>
	
	  
	  <name>David Wesst</name>
	  <email>questions@davidwesst.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>Did you know that I really try and make video games and not just talk about them? Me neither, but this video will fix all that!</p><a id="more"></a><p>I tend to fall into the crutch of talking about technology rather than actually doing it. There is nothing wrong with the evangelism/marketing side of the tech community, but the whole point of me doing this is to share my journey and the tips along the way. Note the &quot;journey&quot; part means, I have to move the needle. An so, here we are with the first devlog of the year.</p><p>In this video I cover the bit of progres I've had on Car Scientist, and how it's become something of a game development sandbox to practice and (ideally) sharpen my gamedev skills. I also review the LARGE amount of planning I did and reflect a bit on how I sort through what ideas should be in this game versus the next one.</p><iframe width="560" height="315" src="https://www.youtube.com/embed/-sKlp_CUhB0" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Did you know that I really try and make video games and not just talk about them? Me neither, but this video will fix all that!&lt;/p&gt;
    
    </summary>
    
      <category term="Devlog" scheme="https://westerndevs.com/categories/Devlog/"/>
    
    
      <category term="Game Development" scheme="https://westerndevs.com/tags/Game-Development/"/>
    
      <category term="Devlog" scheme="https://westerndevs.com/tags/Devlog/"/>
    
      <category term="Video" scheme="https://westerndevs.com/tags/Video/"/>
    
      <category term="Car Scientist" scheme="https://westerndevs.com/tags/Car-Scientist/"/>
    
  </entry>
  
  <entry>
    <title type="html">Where to Find Your Gamedev Community</title>
    <link href="https://westerndevs.com/Game-Development/Where-To-Find-Your-Gamedev-Community/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/Game-Development/Where-To-Find-Your-Gamedev-Community/</id>
    <published>2020-01-21T11:09:00.000Z</published>
    <updated>2022-11-17T15:17:14.412Z</updated>
	<author>
	
	  
	  <name>David Wesst</name>
	  <email>questions@davidwesst.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>Four places to find your new game development and/or design and/or technology community and figure out if it's even good!</p><a id="more"></a><iframe width="560" height="315" src="https://www.youtube.com/embed/rfxfLZTM7Fk" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><p>Did you know there are people out there who will help you with your game because they WANT TO DO IT? I know, right? This magical place is called a “community” and they exist literally all over the world. You just need to find one. In this video, I talk about four different places to find technology and game development/design communities right from where your sitting.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Four places to find your new game development and/or design and/or technology community and figure out if it&#39;s even good!&lt;/p&gt;
    
    </summary>
    
      <category term="Game Development" scheme="https://westerndevs.com/categories/Game-Development/"/>
    
    
      <category term="Game Development" scheme="https://westerndevs.com/tags/Game-Development/"/>
    
      <category term="Community" scheme="https://westerndevs.com/tags/Community/"/>
    
      <category term="Game Design" scheme="https://westerndevs.com/tags/Game-Design/"/>
    
      <category term="Gamedev" scheme="https://westerndevs.com/tags/Gamedev/"/>
    
      <category term="Professional Development" scheme="https://westerndevs.com/tags/Professional-Development/"/>
    
  </entry>
  
  <entry>
    <title type="html">No Cost Game Design Toolbox</title>
    <link href="https://westerndevs.com/_/No-Cost-Game-Design-Toolbox/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/No-Cost-Game-Design-Toolbox/</id>
    <published>2020-01-13T21:51:04.000Z</published>
    <updated>2022-11-17T15:17:14.412Z</updated>
	<author>
	
	  
	  <name>David Wesst</name>
	  <email>questions@davidwesst.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>Want to design games but have no money? Never fear, for my game design toolbox (and process) can help get you started!</p><a id="more"></a><iframe width="560" height="315" src="https://www.youtube.com/embed/Wtt_a2hbF3o" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><p>I've spent the past week working on the the game design for #CarScientist. What I noticed was that I didn't open a code editor or development tool once this whole week, and considering that's my comfort zone when it comes to any form of software development, I was both surprised and pleased that I managed to wear my design hat so well!</p><p>On top of just being in design mode, I avoided my other &quot;excuse&quot; which is to want and research what you don't have, which is usually some tool or domain I think is clever. This whole toolbox not only keeps me focused, but it keeps me on budget as well as you can get all of it for nothing. Take a look and let me know in the comments your thoughts on my game design toolbox, along with what tools you use.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Want to design games but have no money? Never fear, for my game design toolbox (and process) can help get you started!&lt;/p&gt;
    
    </summary>
    
    
      <category term="Game Development" scheme="https://westerndevs.com/tags/Game-Development/"/>
    
      <category term="Game Design" scheme="https://westerndevs.com/tags/Game-Design/"/>
    
      <category term="Toolbox" scheme="https://westerndevs.com/tags/Toolbox/"/>
    
      <category term="OneNote" scheme="https://westerndevs.com/tags/OneNote/"/>
    
      <category term="Excel" scheme="https://westerndevs.com/tags/Excel/"/>
    
  </entry>
  
  <entry>
    <title type="html">GitHub Game Off 2019 Game Jam featuring DW</title>
    <link href="https://westerndevs.com/Game-Development/gameoff2019-gamejam-devlog/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/Game-Development/gameoff2019-gamejam-devlog/</id>
    <published>2019-11-26T14:57:00.000Z</published>
    <updated>2022-11-17T15:17:14.412Z</updated>
	<author>
	
	  
	  <name>David Wesst</name>
	  <email>questions@davidwesst.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>For the past month I have been participating in the GameOff 2019 Gamejam hosted by GitHub over on Itch.io and I've been devlogging about it over on my YouTube channel.</p><a id="more"></a><iframe width="560" height="315" src="https://www.youtube.com/embed/videoseries?list=PLbTA1UhK0wKjTEEc_wO1n0w_hPAUIeVRf" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe><p>For the past year or so, I've been working on learning and getting into video game development (a.k.a. gamedev) as a sort of side thing to the whole enterprise cloud architect thing that I do during the day.</p><p>In order to focus my effort, I decided that I would participate in the GitHub hosted <a href="https://itch.io/jam/game-off-2019" target="_blank" rel="noopener">GameOff 2019 Game Jam on Itch.io</a>. It's been a ride to say the least, but as I've been doing it, I've been doing a devlog series on YouTube about my progress and my thoughts throughout the competition.</p><h2>Where Do I Find the Vlog</h2><p>You're in the right spot, as I'm going to cross post my <a href="https://itch.io/" target="_blank" rel="noopener">Itch.io</a> project devlog posts here, but you can also follow along on my <a href="https://youtube.com/davidwesst" target="_blank" rel="noopener">YouTube channel</a> if you're into that sort of thing, or you can just <a href="https://www.youtube.com/playlist?list=PLbTA1UhK0wKjTEEc_wO1n0w_hPAUIeVRf" target="_blank" rel="noopener">checkout the playlist here</a>.</p><p>The game jam ends on December 1, and there is more work to be done, so stay tuned for more posts.</p><hr><p>Thanks for playing. ~ DW</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;For the past month I have been participating in the GameOff 2019 Gamejam hosted by GitHub over on Itch.io and I&#39;ve been devlogging about it over on my YouTube channel.&lt;/p&gt;
    
    </summary>
    
      <category term="Game Development" scheme="https://westerndevs.com/categories/Game-Development/"/>
    
    
      <category term="gamedev" scheme="https://westerndevs.com/tags/gamedev/"/>
    
  </entry>
  
  <entry>
    <title type="html">Streaming Code and Play on Mixer every Thursday and Sunday</title>
    <link href="https://westerndevs.com/_/streaming-code-and-games-on-mixer/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/streaming-code-and-games-on-mixer/</id>
    <published>2018-09-27T17:55:42.000Z</published>
    <updated>2022-11-17T15:17:14.412Z</updated>
	<author>
	
	  
	  <name>David Wesst</name>
	  <email>questions@davidwesst.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<iframe allowfullscreen="true" src="https://mixer.com/embed/player/davidwesst" width="620" height="349"> </iframe><p>I recently started streaming twice a week on <a href="https://mixer.com/davidwesst" target="_blank" rel="noopener">Mixer</a>. The streams happen at 9:30pm CT (7:30pm PT or 10:30pm ET) on Thursdays and Sundays. Thursdays are <em>Code Nights</em> where I fumble through the creation of a video game. Sundays are <em>Play Nights</em> I play and analyze a game that has something interesting in it. No specific topic, just play and talk about game with the intent of finding interesting design in games.</p><p>Now, I'll take a few questions.</p><h2>Are you a game developer now?</h2><p>No, but I'd like to be. More specifically, I'd like <em>my own</em> games.</p><p>That's not to say I wouldn't work somewhere that makes games, as I'm sure I'd learn a lot, but as it stands right now with my real life, I'm not willing take on the cost of doing the whole &quot;lift and shift&quot; to my whole career. Maybe another day, but not today.</p><h2>What about all that web development stuff?</h2><p>That's still something I like and will continue to work on, but making a video game has always been something of a dream. I've dabbled in combining the two, but there is a lot I need to learn about game development and design that has nothing to do with code.</p><h2>What is with the streaming?</h2><p>If I'm being honest, it's more for me than it is for you. No offense.</p><p>The streams act as milestones to keep it relevent in my real life. The streams are scheduled and planned for, as they are hard dates in a calendar that I can plan my life around. Playing a game keeps me thinking about what I want to see in my game, and code keeps me building the game.</p><h2>Is that why you've been in hiding for so long?</h2><p>Not intentionally, but yeah.</p><p>There is a whole story behind it, but I'll save that for another post. The short of it is that during my self imposed sabatical, I realized that I need to work on something I'm truly passionate about. That passion is video games, and this is me making sure I don't regret trying to get myself involved.</p><h2>I have an idea for a game...</h2><p>Awesome. Me too! Feel free to share it with me on <a href="https://twitter.com/davidwesst" target="_blank" rel="noopener">Twitter</a>, <a href="https://www.instagram.com/davidwesst/" target="_blank" rel="noopener">Instagram</a>, or <a href="https://mixer.com/davidwesst" target="_blank" rel="noopener">Mixer Chat</a> and we can chat about it.</p><h2>Does that mean you're leaving the Western Devs?</h2><p>Heh, no.</p><p>First, these people would be lost without me. Second, I'm still planning on talking about code, but likely a little less often. I'll be reviving <a href="https://davidwesst.com" target="_blank" rel="noopener">davidwesst.com</a> in the near future where you can see all my game related content. For the time being though, only devblogs will show up over here.</p><h2>When can I buy your game?</h2><p>I have no idea. Right now, I'm toying with a prototype I call <em>Vagabond</em> and whether that turns into a game is a whole other story.</p><h2>Is your game code open source?</h2><p>No, but I'm not against it.</p><p>Ignoring the whole selling an open source game discussion, my code is amateur at best. I'm an application web developer trying to wear the shoes of a console/PC game developer. It's going to take some time before I feel like I know what I'm doing to actually put something out there for people to assess.</p><h2>I'm interested. How do I support?</h2><p>Like, share, watch, and participate whenever and however you can.</p><p>I'm really just getting started in this, and it's going to have some rough edges. Just stay tuned and we'll see where this takes me.</p><hr><p>Thanks for playing. ~ DW</p>]]></content>
    
    <summary type="html">
    
      This month I started livestreaming game code and gameplay every Thursday and Sunday night at 9:30pm CT
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">F12 Chooser is a Dev Tool Thing</title>
    <link href="https://westerndevs.com/Development/f12-chooser-is-dev-tool-thing/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/Development/f12-chooser-is-dev-tool-thing/</id>
    <published>2018-03-28T17:10:00.000Z</published>
    <updated>2022-11-17T15:17:14.412Z</updated>
	<author>
	
	  
	  <name>David Wesst</name>
	  <email>questions@davidwesst.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>The F12 Chooser is a development tool thing that I like and you should know about if you want your web application or web extension to support Microsoft Edge.</p><a id="more"></a><p><img src="https://i.imgur.com/wt4L09z.png" alt="1"></p><p>The <a href="https://docs.microsoft.com/en-us/microsoft-edge/devtools-guide" target="_blank" rel="noopener">F12 Developer Tools</a> are pretty great. They are the original in-browser developer tools (included in Internet Explorer 7), and have evolved into something more modern for all us &quot;modern&quot; developers.</p><p>With all in-browser developer tools, I've found that every once and I come across an application I'm trying to debug that is so unstable that F12 can't seem to attache properly. Whether that's because of the application locking up the browser or whatever, without being able to attach a debugger I can't really get into the code and start sorting out the issue.</p><p>That's where the F12 Chooser comes into play.</p><h2>What is F12 Chooser?</h2><p>F12 Chooser is a utility built into Windows that allows you choose the target application for the F12 Developer Tools without having to open Microsoft Edge itself.</p><h2>How do I run it?</h2><p>On Windows 10, you run <code>\\Windows\System32\F12\F12Chooser.exe</code>. The window that comes up will display a list of targets for which you can attach the F12 tools. You can find the 64-bit version in <code>C:\Windows\SysWOW64\F12\F12Chooser.exe</code>.</p><p><img src="https://i.imgur.com/ch1TjEr.gif" alt="2"></p><h2>Why does this matter?</h2><p>Because it gives you another option when it seems like the F12 tools are failing. If your browser locks up when you try and debug your application code, you should try the F12 Chooser once the application has loaded in the browser.</p><p>It also allows you to target applications that aren't necessarily web applications that you view in a browser. For example, maybe you're looking to debug an <a href="https://docs.microsoft.com/en-us/office/dev/add-ins/testing/debug-add-ins-using-f12-developer-tools-on-windows-10" target="_blank" rel="noopener">Office Add-In</a>.</p><h2>Conclusion</h2><p>In conclusion, you have the F12 Chooser as another way to load up and attach the F12 developer tools in Windows 10 to help you with debugging web applications, web extensions, and even other things like Office Add-Ins.</p><p>And now you know it exists. You're welcome.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;The F12 Chooser is a development tool thing that I like and you should know about if you want your web application or web extension to support Microsoft Edge.&lt;/p&gt;
    
    </summary>
    
      <category term="Development" scheme="https://westerndevs.com/categories/Development/"/>
    
    
      <category term="JavaScript" scheme="https://westerndevs.com/tags/JavaScript/"/>
    
      <category term="TypeScript" scheme="https://westerndevs.com/tags/TypeScript/"/>
    
      <category term="Web Extensions" scheme="https://westerndevs.com/tags/Web-Extensions/"/>
    
      <category term="Office Add-In" scheme="https://westerndevs.com/tags/Office-Add-In/"/>
    
  </entry>
  
  <entry>
    <title type="html">Picking between TypeScript and JavaScript</title>
    <link href="https://westerndevs.com/Development/typescript-or-javascript/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/Development/typescript-or-javascript/</id>
    <published>2018-03-15T15:40:00.000Z</published>
    <updated>2022-11-17T15:17:14.412Z</updated>
	<author>
	
	  
	  <name>David Wesst</name>
	  <email>questions@davidwesst.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>Which one should you pick: TypeScript or JavaScript? They are both great languages, people always ask me when you should use one or the other. This post puts that to rest.</p><a id="more"></a><p>Whether it's a work project or a personal one, the question &quot;TypeScript or JavaScript&quot; always seems to come up in my mind. Utlimately, they provide a very similiar function considering that TypeScript is a superset of JavaScript, and compiles down to JavaScript itself.</p><p>I'm not the only person that has this question either. Over the past year, I've asked a number of JavaScript/TypeScript developers about how they pick between the two and I wanted to sum up my thoughts here after being influenced by my private panel of experts.</p><h2>It Depends on the Project</h2><p>Of course it does.</p><p>There is never one answer for everything, and this is no different. That being said, there are a few criteria or &quot;flags&quot; that help me select when I want to use one over the other.</p><h3>JavaScript Knowledge is Assumed</h3><p>Before we get into it, let me clarify that I'm assuming that the developer(s) working on the project already know JavaScript. They don't need to be experts, but they are familiar with writing vanilla JavaScript for applications, whether that be client or server side code.</p><p>That being said, I'm also assuming that a TypeScript-focued developer can get their way around JavaScript code.</p><h2>When to TypeScript</h2><p><img src="https://i.imgur.com/IAPRGfv.png" alt=""></p><p>I fall to TypeScript when I am writing more than one or two code files or if I'm writing code that I expect someone else to have to run. Although I use TypeScript, the it's not necessarily the language itself that I want, but the TypeScript compiler as it helps the other developers running my code, and removes the ambiguity of types between functions or classes that need to work togther.</p><p>It does a lot of stuff for me:</p><ul><li>Catches errors, especially typing ones, at compile time rather than run time</li><li>Sets standards around what JS-like conventions I want to use</li><li>Better legacy browser support</li><li>Supports multiple module practices</li></ul><p>Ultimately, that compiler is powerful and I put a lot of trust into it considering I expect that the compiled code to be optimal.</p><h3>But doesn't the compiler work on JavaScript too?</h3><p>Yes. Yes it does.</p><p>The catch is that the compiler is not as thurough as it is with TypeScript. When you add the <code>//@ts-check</code> <a href="https://code.visualstudio.com/docs/languages/javascript#_type-checking-and-quick-fixes-for-javascript-files" target="_blank" rel="noopener">reference</a> at the top of your JavaScript file in Visual Studio Code, that really helps with the development story of any JavaScript code, but it's still not as deep as using TypeScript itself.</p><p>Using TypeScript with the TypeScript compiler gives you that little bit of extra help in development, and that is really where the value comes in for me.</p><h2>When to JavaScript</h2><p><img src="https://i.imgur.com/yCn8NUQ.png" alt=""></p><p>I tend to use JavaScript when I'm only writing a little bit of code and don't want to deal with the overhead of setting up the compiler for the project. For examples, when I'm writing a little Node script, or experimenting with REST API and want a simple GUI, I'll quickly put together some vanilla JS code and get something working quickly.</p><p>That being said, I write the majority of my JavaScript in <a href="https://code.visualstudio.com" target="_blank" rel="noopener">Visual Studio Code</a> which provides a lot of JavaScript tooling support using the TypeScript compiler underneath the hood.</p><h2>Conclusion</h2><p>In conclusion, when I have to pick between JavaScript or TypeScript I lean towards TypeScript. It provides the better development story between the two, and that's a really important factor when I'm writing and sharing code.</p><p>When I'm lazy and don't want to setup a TypeScript project, I fall back on JavaScript but still rely on the built-in TypeScript tooling in Visual Studio Code.</p><p>TypeScript provides the tooling and needed bit of abstraction from the implementation with its compiler. Even though JavaScript has come a long way with <a href="https://github.com/tc39/ecma262" target="_blank" rel="noopener">ECMA-262</a> getting plenty of updates, there is still the challenge of browser vendors supporting the spec and so on. In the end, the overhead of setting up your project to using the TypeScript compiler outweighs the complexity that large JavaScript projects bring to the table.</p><p>Even when JavaScript is &quot;feature complete&quot;, I'm guessing that TypeScript will still provide a stronger developer story for larger software projects, while JavaScript will continue to provide the foundation for the web platform, and TypeScript itself.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Which one should you pick: TypeScript or JavaScript? They are both great languages, people always ask me when you should use one or the other. This post puts that to rest.&lt;/p&gt;
    
    </summary>
    
      <category term="Development" scheme="https://westerndevs.com/categories/Development/"/>
    
    
      <category term="JavaScript" scheme="https://westerndevs.com/tags/JavaScript/"/>
    
      <category term="TypeScript" scheme="https://westerndevs.com/tags/TypeScript/"/>
    
  </entry>
  
  <entry>
    <title type="html">Crowdsourcing Documentation is Cool</title>
    <link href="https://westerndevs.com/Development/crowdsourcing-docs-is-cool/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/Development/crowdsourcing-docs-is-cool/</id>
    <published>2018-03-13T13:40:00.000Z</published>
    <updated>2022-11-17T15:17:14.412Z</updated>
	<author>
	
	  
	  <name>David Wesst</name>
	  <email>questions@davidwesst.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>The idea of these large enterprises crowdsourcing their technical documentation is pretty cool. More cool than I had originally realized, and I want to take a moment to explain why I like it and why you should get involved yourself.</p><a id="more"></a><p>I updated the Microsoft Edge documentation on web extensions. As of this writing, you can see it <a href="https://docs.microsoft.com/en-us/microsoft-edge/extensions/extensions-for-enterprise" target="_blank" rel="noopener">here</a>, but just in case you can't I've included an image.</p><p><img src="https://i.imgur.com/5ptKftE.png" alt=""></p><p>The idea of these large enterprises crowdsourcing their technical documentation is pretty cool. More cool than I had originally realized and, for that reason, I want to take a moment to explain why I like it and why you should get involved yourself.</p><h2>What do you mean by &quot;Crowdsourcing&quot;?</h2><p>When it comes to web platforms, many of the platform owners (<a href="https://github.com/awsdocs" target="_blank" rel="noopener">Amazon</a>, <a href="https://github.com/MicrosoftDocs" target="_blank" rel="noopener">Microsoft</a>, <a href="https://github.com/mdn" target="_blank" rel="noopener">Mozilla</a>) have started crowdsourcing their technical documentation. When I say <em>crowdsourcing</em> I mean that the organization opens up the conversation about what the documentation should say to the community at large.</p><p>The community, being the consumers of the product (and the documentation) can have input into adding, editing, or removing sections of official product or platform documentation. Assuming the vendor agrees with the changes being suggested, then the change is accepted and the official documentation is updated.</p><p>This whole process if facilitated generally by GitHub, where documentation is published as source code and pull requests act as the avenue submitting changes. This way, the conversation about the changes is tracked, shared, and kept in the open for people to review and understand.</p><p>Plus, using things like contributors guides and automated build tools can be integrated with GitHub to validate the change, to make sure that the change to the documentation doesn't break anything and follows any rules the vendor has in place.</p><h2>Where is the coolness?</h2><p>There are a couple of cool points I'd like to highlight.</p><h3>Consumers are More Qualified than Vendors</h3><p>The developers of the platform itself are somewhat qualified considering they know the inner workings of the product, but they aren't the ones using it. The people using the product don't need to know how the guts work, they need to how to use it.</p><p>There is nobody more qualified to update product documentation than the consumers of the documentation and technology. The people that are neck deep and actually <em>using</em> in tech to make things happen. Those are the people that are best suited to critique and ultimately improve the documentation.</p><h3>Transparent Conversations</h3><p>When you crowdsource your documentation, you need to make it open and accessible, which tends to make conversation around the documentation transparent. In our case, GitHub provides the facilty to make this happen with public repositories filled with documentation and through the issue and pull request interface.</p><p>People can submit pull requests and issues and have a conversation with the vendor about their documentation and ultimately their product.</p><p>Something that starts out like a minor update, could result in an entire section. In my case, I was confident that I'd be adding new pages of content, but once I got into the thick of it, I realized all the parts were already present in the docs. I just needed to add some context and minor updates to what was already there.</p><h2>Conclusion</h2><p>In conclusion, anyone reviewing the documentation for a tool or technology should check to see if:</p><ol><li>It's open to improvement through crowdsourcing</li><li>They can think they can make it better.</li></ol><p>It's a great way to get involved in your technology community, all while improving the developer experience for the next person that comes along.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;The idea of these large enterprises crowdsourcing their technical documentation is pretty cool. More cool than I had originally realized, and I want to take a moment to explain why I like it and why you should get involved yourself.&lt;/p&gt;
    
    </summary>
    
      <category term="Development" scheme="https://westerndevs.com/categories/Development/"/>
    
    
      <category term="JavaScript" scheme="https://westerndevs.com/tags/JavaScript/"/>
    
      <category term="Documentation" scheme="https://westerndevs.com/tags/Documentation/"/>
    
  </entry>
  
</feed>
