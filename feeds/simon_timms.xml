<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Western Devs</title>
  
  <link href="/feeds/simon_timms" rel="self" type="application/atom+xml"/>
  <link href="https://westerndevs.com" rel="alternate" type="application/atom+xml"/>
  
  <updated>2022-02-16T21:42:11.439Z</updated>
  <id>https://westerndevs.com/</id>
  
  <author>
    <name>Western Devs</name>
	<uri>https://westerndevs.com</uri>
    <email>info@westerndevs.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title type="html">Installing the AzFilesHybrid PowerShell Module</title>
    <link href="https://westerndevs.com/_/install-azfileshybrid-powershell/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/install-azfileshybrid-powershell/</id>
    <published>2022-02-16T05:00:00.000Z</published>
    <updated>2022-02-16T21:42:11.439Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>If you don't do a lot of powershell then the instructions on how to install the AzFilesHybrid module can be lacking. Here is how to do it</p><ol><li>Download the module from https://github.com/Azure-Samples/azure-files-samples/releases</li><li>Unzip the file downloaded in step 1</li><li>Go into the folder and run the copy command</li></ol><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./<span class="module-access"><span class="module"><span class="identifier">CopyToPSPath</span>.</span></span>ps1</span><br></pre></td></tr></table></figure><ol start="4"><li>Install the module with</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Install</span>-<span class="keyword">Module</span> -<span class="keyword">Name</span> AzFilesHybrid -<span class="keyword">Force</span></span><br></pre></td></tr></table></figure><p>With this module installed you can then run things like Join-AzStorageAccount to get a fileshare joined to the domain</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Join-AzStorageAccount -ResourceGroupName <span class="string">"rg-azfileshare"</span> -StorageAccountName <span class="string">"sa-azfileshare"</span> -<span class="built_in">DomainName</span> <span class="string">"somedomain.com"</span> -DomainUserName <span class="string">"jane"</span> -DomainUserPassword <span class="string">"password"</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;If you don&#39;t do a lot of powershell then the instructions on how to install the AzFilesHybrid module can be lacking. Here is how to do it
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Purge CDN in DevOps</title>
    <link href="https://westerndevs.com/_/purge-cdn-in-devops/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/purge-cdn-in-devops/</id>
    <published>2022-01-27T05:00:00.000Z</published>
    <updated>2022-02-16T21:42:11.443Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>In order to purge a cache in the build pipeline you can use some random task that some dude wrote or you can just use the Azure CLI.</p><p>Here is an example of what it would look like to purge the entire CDN top to bottom</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">task:</span> <span class="string">AzureCLI@2</span></span><br><span class="line">  <span class="attr">displayName:</span> <span class="string">'Invalidate CDN Cache'</span></span><br><span class="line">  <span class="attr">inputs:</span></span><br><span class="line">    <span class="attr">azureSubscription:</span> <span class="string">'Azure'</span></span><br><span class="line">    <span class="attr">scriptType:</span> <span class="string">'batch'</span></span><br><span class="line">    <span class="attr">scriptLocation:</span> <span class="string">'inlineScript'</span></span><br><span class="line">    <span class="attr">inlineScript:</span> <span class="string">'az cdn endpoint purge --content-paths "/*"  -n devascacdnendpoint -g devasca-rg --no-wait --profile-name devascacdn'</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;In order to purge a cache in the build pipeline you can use some random task that some dude wrote or you can just use the Azure CLI.&lt;/p&gt;

    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Handling Nil in Nested Hashes in Ruby</title>
    <link href="https://westerndevs.com/_/hash-nil/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/hash-nil/</id>
    <published>2021-11-24T05:00:00.000Z</published>
    <updated>2022-02-16T21:42:11.439Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>Tony Hoare introduced Null in ALGOL W in 1965. He says that it was a billion dollar mistake. Fortunately, Ruby totally avoids this sticky problem by renaming <code>null</code> to <code>nil</code>. This is the same strategy that my kids use when I say &quot;next person to ask for popcorn is going to do pushups&quot; and they ask for &quot;corn that has been popped&quot;. If you're navigating a nested hash, that is a hash that contains other hashes then you might get into a situation where you want to do something like</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">best_dessert = meals[:dinner][:dessert].<span class="built_in">find</span>&#123; | dessert | &#123;<span class="built_in">name</span>: dessert.<span class="built_in">name</span>, <span class="built_in">rating</span>: dessert.<span class="built_in">rating</span> &#125; &#125;.sort_by&#123; |a,b| b[:<span class="built_in">rating</span>] &#125;.first</span><br></pre></td></tr></table></figure><p>There are a bunch of opportunities in there for nil to creep in. Maybe there are no dinners maybe no desserts... to handle these we can use a combination of <code>dig</code> (which searches a path in a hash and returns nil if the path doesn't exist) and the safe navigation <code>&amp;.</code> operator.</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">best_dessert = meals.dig(:dinner, :dessert)&amp;.<span class="built_in">find</span>&#123; | dessert | &#123;<span class="built_in">name</span>: dessert.<span class="built_in">name</span>, <span class="built_in">rating</span>: dessert.<span class="built_in">rating</span> &#125; &#125;&amp;.sort_by&#123; |a,b| b[:<span class="built_in">rating</span>] &#125;&amp;.first</span><br></pre></td></tr></table></figure><p>This combination of dig and &amp;. allows us to get a nil out if nil appears anywhere in the chain without ending up in an error. We are calling the combination of dig and &amp;. the 811 operator after https://call811.com/</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Tony Hoare introduced Null in ALGOL W in 1965. He says that it was a billion dollar mistake. Fortunately, Ruby totally avoids this sticky
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Choosing Power BI</title>
    <link href="https://westerndevs.com/_/choosing-power-bi/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/choosing-power-bi/</id>
    <published>2021-11-19T05:00:00.000Z</published>
    <updated>2022-02-16T21:42:11.439Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>If you're a developer and you're looking for a solution for reporting in your application then Power BI might be the right choice for you. However, there are tradeoffs that are worth considering before you dig in too much.</p><h2>What is it?</h2><p>The GitHub copilot I have running while writing this wants me to say that &quot;Power BI is a platform for creating and managing data-driven reports. It's a powerful tool that allows you to create reports that are easy to understand and use.&quot; That sounds an awful lot like a sentence that an AI trained on Microsoft marketing data would say. It isn't entirely inaccurate. For me Power BI is a combination for two different reporting tools which are pretty different from one another. The first is the one you see in all the marketing literature: Dashboard reports. These are nifty looking reports that are largely driven by visuals like maps or charts. Users can easily drill into aspects of the data by clicking on the charts or tables to filter the data and drill in. These reports aren't great for people who like to see the underlying data and draw their own conclusions.</p><p>The second report type is Paginated Reports. These reports are basically a complete migration of the older SQL Server Reporting Services (SSRS) reports. There is limited support for cool graphics but if you need an Excel like view of the data then they are great. I've run into a few cases in the past where I've tried to convince users that they cannot possibly want a 90 page report and that they should use the dashboard report. But frequently users do legitimately want to print 90 pages and go at the report with a highlighter. One of my favorite sayings for these situations is that as a developer I make suggestions and users make decisions.</p><p>The desktop based tools for building these reports are all pretty good. The dashboard report tool in particular is excellent. It may be that your users don't need to use online reporting and that providing them with a database connection and a copy of Power BI Desktop will be a good solution. The added advantage there is that the desktop tools are free to use. If you have a read only replica of your database then letting users develop their own reports doesn't have much of a downside other than having to support people as they learn the system. A cool idea is to build projections or views inside your database to handle the complex joins in your data and remove that burden from the users.</p><p>If you want to embed the reports in your application there is facility for doing that through a JavaScript API. You do need to jump through some hoops to authenticate and generate tokens but that's a lot easier than developing your own HTML based reports. There aren't a whole lot of examples out there for how to do embeddeding and you will need to spend some time learning the security models.</p><p>The alternative to all this is to use one of the myriad of other reporting tools that are available. I've used Telerik Reporting quite a lot in the past and I can confidently say it is &quot;not terrible&quot;. That's about as high of praise as you're going to get from me for a reporting tool.</p><h2>Cost</h2><p>As with anything Microsoft the pricing for all this is convoluted and contently changing. This is my current understanding of it but  you can likely get a better deal and understanding by talking to your sales representative.</p><ul><li>Power BI Desktop: Free as in beer</li><li>Power BI Pro: Let's you run dashboard reports online and embed them in your application (note that this doesn't' let you embed paginated reports) $9.99/month a users</li><li>Power BI Premium per user: This lets you run dashboard reports online and embed them in your application and also run paginated reprots (note I didn't say embed paginated reports) $20/month a user</li><li>Power BI Premium per capacity: Run and embed both report types. Open for as many users as you have. $4995/month. Yikes, that price sure jumps up</li></ul><p>Being able to embed paginated reports was the killer feature for me that took the reporting cost from very reasonable to very expensive.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;If you&#39;re a developer and you&#39;re looking for a solution for reporting in your application then Power BI might be the right choice for you
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">App Services on VNET</title>
    <link href="https://westerndevs.com/_/app-services-on-vnet/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/app-services-on-vnet/</id>
    <published>2021-11-14T05:00:00.000Z</published>
    <updated>2022-02-16T21:42:11.439Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>When setting up an app service, including azure functions,  you can have it reside on a vnet so it can access internal resources like a database. Often time though you'll run into some problems routing to the database, specifically because of DNS. There are some good tools for debugging the connection.</p><p>First off you'll need to open a console to the app service. I do this using the kudu tools but I think the console exposed directly on the portal works too. The standard tools can't run in the restricted environment provided. However there are a couple of tools you can use in their place.</p><p>NSLookup - &gt; nameresolver.exe - run it with <code>nameresolver.exe blah.com</code>ping -&gt; tcpping.exe - run it with <code>tcpping.exe blah.com:80</code></p><p>If you're seeing DNS issues you can override the DNS server with the variables <code>WEBSITE_DNS_SERVER</code> and <code>WEBSITE_DNS_ALT_SERVER</code>. These two are entered in the app service config settings</p><p>One of the most typical problems I've encountered is that the app service isn't routing requests properly unless you add the app setting <code>WEBSITE_VNET_ROUTE_ALL=1</code>.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;When setting up an app service, including azure functions,  you can have it reside on a vnet so it can access internal resources like a d
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Using ngrok for ASP.NET</title>
    <link href="https://westerndevs.com/_/ngrok-aspnet/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/ngrok-aspnet/</id>
    <published>2021-10-25T04:00:00.000Z</published>
    <updated>2022-02-16T21:42:11.443Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>If you try to just use ngrok like this</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngrok http <span class="number">1316</span></span><br></pre></td></tr></table></figure><p>You're likely going to run into an issue when you browse to the website via the ngrok supplied URL that there are invalid host headers. This is because the local server is expecting headers for <code>localhost</code> and instead it is getting them for something like <code>https://3fe1-198-53-125-218.ngrok.io</code>. This can be solved by running with</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ngrok <span class="keyword">http</span> <span class="number">1316</span> -host-header=<span class="string">"localhost:1316"</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;If you try to just use ngrok like this&lt;/p&gt;
&lt;figure class=&quot;highlight angelscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Reading a TSV file in Pandas</title>
    <link href="https://westerndevs.com/_/pandas-read-tsv/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/pandas-read-tsv/</id>
    <published>2021-10-25T04:00:00.000Z</published>
    <updated>2022-02-16T21:42:11.443Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>Pretty easy, just use the csv loader with a different record separator</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data = pd.read<span class="constructor">_csv('<span class="params">work</span><span class="operator">/</span><span class="params">data</span>.<span class="params">tsv</span>', <span class="params">sep</span>='\<span class="params">t</span>')</span></span><br></pre></td></tr></table></figure><p>You can tell it explicitly to use the first column as the header</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data = pd.read<span class="constructor">_csv('<span class="params">work</span><span class="operator">/</span><span class="params">data</span>.<span class="params">tsv</span>', <span class="params">sep</span>='\<span class="params">t</span>', <span class="params">header</span>=0)</span></span><br></pre></td></tr></table></figure><p>I also found that it interpreted my first column as an index which I didn't want (it offset all the columns by one)</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data = pd.read_csv(<span class="string">'work/data.tsv'</span>, <span class="attribute">sep</span>=<span class="string">'\t'</span>, <span class="attribute">header</span>=0, <span class="attribute">index_col</span>=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Pretty easy, just use the csv loader with a different record separator&lt;/p&gt;
&lt;figure class=&quot;highlight reasonml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Using RLS in Power BI Embedded</title>
    <link href="https://westerndevs.com/_/RLS-with-power-bi/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/RLS-with-power-bi/</id>
    <published>2021-10-22T04:00:00.000Z</published>
    <updated>2022-02-16T21:42:11.435Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>Power BI is a funny animal. On some levels it is a logical successor to SSRS but on other levels it is a totally different beast. One of the ways it differs greatly from SSRS is in handling parameters, especially secure parameters. When embedding an SSRS report you could specify the parameter value in a secure fashion and then now show the selector to end users.</p><p>In many cases there is a need to use row level security (RLS) to restrict the data that a user can see in Power BI. There are a myriad of ways to do this wrong and I think I've explored most of them over the last few days. There is also at least one way that works.</p><p>A tempting approach is to use a filter. These can be applied at render time in the browser by adding to the config when embedding the report.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> config = &#123;</span><br><span class="line">      visualName: <span class="string">''</span>,</span><br><span class="line">      type: <span class="string">'report'</span>,</span><br><span class="line">      accessToken: token, </span><br><span class="line">      embedUrl: token.embedUrl,</span><br><span class="line">      tokenType: powerbi.models.TokenType.Embed,</span><br><span class="line">      permissions: permissions,</span><br><span class="line">      <span class="comment">// 👇 filters</span></span><br><span class="line">      filters: [</span><br><span class="line">        &#123;</span><br><span class="line">          $schema: <span class="string">"http://powerbi.com/product/schema#basic"</span>,</span><br><span class="line">          target: &#123;</span><br><span class="line">              table: <span class="string">"monthlyProducts"</span>,</span><br><span class="line">              column: <span class="string">"userId"</span></span><br><span class="line">          &#125;,</span><br><span class="line">          operator: <span class="string">"In"</span>,</span><br><span class="line">          values: [<span class="string">"stimms"</span>]</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="comment">// ☝️</span></span><br><span class="line">      settings: &#123;</span><br><span class="line">        panes: &#123;</span><br><span class="line">          filters: &#123;</span><br><span class="line">            visible: <span class="literal">true</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">          pageNavigation: &#123;</span><br><span class="line">            visible: <span class="literal">true</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>This class of parameter is fine for providing filters that can be updated later by the user. However, it should not be used for parameters that require some degree of security like a user name. These parameters are easily changed and, unless your parameter are in some way cryptographically secure there is a good chance you're introducing a broken access control - <a href="https://owasp.org/Top10/A01_2021-Broken_Access_Control/" target="_blank" rel="noopener">#1</a> on the <a href="https://owasp.org/www-project-top-ten/" target="_blank" rel="noopener">OWASP top 10</a>.</p><p>Instead of this approach you can use the manage roles functionality in Power BI.</p><p><img src="/images/2021-10-22-RLS_with_power_bi.md/2021-10-22-15-55-31.png" alt="">)</p><p>This functionality is designed to provide high level filters for data. A lot of the examples I see are for things like restricting a user in the <code>East</code> region from seeing the data of a user in the <code>West</code> region. This is done by assigning a role to that user when generating the embedding token. Then you'd set up a role for each region (see 1) and apply a filter expression to your tables so the only records with a region of <code>East</code> would show up.</p><p><img src="/images/2021-10-22-RLS_with_power_bi.md/2021-10-22-15-59-46.png" alt="">)</p><p>This is a simplistic and somewhat tiresome approach to adding a role mapping. What if a new region like <code>SouthEast</code> is introduced? What isn't, perhaps, as clear is that DAX expression can contain dynamic functions like <code>UserName()</code> which make filtering more powerful.</p><p>What I settled on for my filtering was to have a single role which I enforce at the embedded token generation level and then filter my data by the UserName() which I also set at the embedded token level. Because these are set at the embedded token generation time which occurs on the server I can be confident that I'm not providing a way for somebody to view data they shouldn't.</p><p>The code for generation looks like this:</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> tokenRequest = <span class="keyword">new</span> GenerateTokenRequestV2(</span><br><span class="line">                    reports: <span class="keyword">new</span> List&lt;GenerateTokenRequestV2Report&gt;</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">new</span> GenerateTokenRequestV2Report(reportId)</span><br><span class="line">                    &#125;,</span><br><span class="line">                    datasets: <span class="keyword">new</span> List&lt;GenerateTokenRequestV2Dataset&gt; &#123; <span class="keyword">new</span> GenerateTokenRequestV2Dataset(report.DatasetId) &#125;,</span><br><span class="line">                    identities: <span class="keyword">new</span> List&lt;EffectiveIdentity&gt; &#123; <span class="keyword">new</span> EffectiveIdentity(user.ContactId.ToString(),</span><br><span class="line">                                                                roles: <span class="keyword">new</span> List&lt;<span class="keyword">string</span>&gt; &#123; <span class="string">"ContactId"</span> &#125;,</span><br><span class="line">                                                                datasets: <span class="keyword">new</span> List&lt;String&gt;&#123;report.DatasetId &#125;)</span><br><span class="line">                    &#125;</span><br><span class="line">                );</span><br><span class="line"><span class="keyword">var</span> embedToken = <span class="keyword">await</span> client.EmbedToken.GenerateTokenAsync(tokenRequest);</span><br></pre></td></tr></table></figure><p>In this particular case the data I was returning from the database could be accessed by a number of different people depending on to which group they belonged. Initially I tried crossing the data against the user/group matrix but the cardinality of the resulting set was in the billions and totally overwhelmed both SQL Server and Power BI. Instead what I did was pull in the user/group matrix and the dataset that exposed the group id. In Power BI I did a merge of the datasets along with applying the row level filtering. This was necessary because, as far as I know, there is no way to pass the user name down to the actual query running against the server.</p><p>With all this in place I got good security and good performance. But, wow, did it take me a long time to get there.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Power BI is a funny animal. On some levels it is a logical successor to SSRS but on other levels it is a totally different beast. One of 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Mathplotlib cheat sheet</title>
    <link href="https://westerndevs.com/_/matplotlib-cheat-sheet/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/matplotlib-cheat-sheet/</id>
    <published>2021-10-22T04:00:00.000Z</published>
    <updated>2022-02-16T21:42:11.443Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>Part of an evolving cheat sheet</p><h2>Include the library</h2><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br></pre></td></tr></table></figure><h2>Set the plot size to be larger</h2><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.rcParams[<span class="string">'figure.figsize'</span>] = [<span class="number">30</span>, <span class="number">21</span>]</span><br></pre></td></tr></table></figure><h2>Set plot title</h2><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.<span class="built_in">title</span>("some <span class="built_in">title</span>)</span><br></pre></td></tr></table></figure><h2>Plot a line chart</h2><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(filtered[<span class="string">'datetime'</span>], filtered[<span class="string">'totalsales'</span>], <span class="keyword">label</span><span class="bash">=<span class="string">"Sales Ingest"</span>)</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h2>Add Legend</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">plt</span><span class="selector-class">.legend</span>()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Part of an evolving cheat sheet&lt;/p&gt;
&lt;h2&gt;Include the library&lt;/h2&gt;
&lt;figure class=&quot;highlight elm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span c
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Pandas Cheat Sheet</title>
    <link href="https://westerndevs.com/_/pandas-cheat-sheet/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/pandas-cheat-sheet/</id>
    <published>2021-10-22T04:00:00.000Z</published>
    <updated>2022-02-16T21:42:11.443Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>Part of an evolving cheat sheet</p><h2>Read a file</h2><p>For CSV use</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">data</span> = pd.read_csv('<span class="title">data</span>.<span class="title">csv'</span>)</span></span><br></pre></td></tr></table></figure><p>For excel use</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = pd.read_excel (<span class="string">r'./Detected as deleted from API data.xlsx'</span>)</span><br></pre></td></tr></table></figure><p>You might need to install a library for xlsx files</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip <span class="keyword">install</span> openpyxl</span><br></pre></td></tr></table></figure><h2>Get a summary of the data</h2><p>Numerical summaries</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">data</span>.describe()</span></span><br></pre></td></tr></table></figure><p>Types of columns</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">data</span>.dtypes</span></span><br></pre></td></tr></table></figure><h2>Create a new column from combining with another</h2><p>This adds up values in two columns</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">data</span>[<span class="string">"totalqueuelength"</span>] = <span class="keyword">data</span>[<span class="string">"Svc"</span>] + <span class="keyword">data</span>[<span class="string">"Svc Que"</span>]</span><br></pre></td></tr></table></figure><p>This converts a couple of columns that have the data and time to a single field and turns it into a date</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data<span class="literal">["<span class="identifier">datetime</span>"]</span> = pd.<span class="keyword">to</span><span class="constructor">_datetime(<span class="params">data</span>[<span class="string">"Date"</span>] + <span class="string">" "</span> + <span class="params">data</span>[<span class="string">"Time"</span>], <span class="params">format</span>='%<span class="params">m</span><span class="operator">/</span>%<span class="params">d</span><span class="operator">/</span>%Y %I:%M %<span class="params">p</span>')</span></span><br></pre></td></tr></table></figure><p>Check date formats at https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior</p><h2>Create a new column from a function</h2><figure class="highlight gml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = df.assign(percent=lambda <span class="symbol">x</span>: <span class="number">100</span>* <span class="symbol">x</span>[<span class="string">'deleted on date'</span>] / <span class="symbol">x</span>[<span class="string">'total'</span>])</span><br></pre></td></tr></table></figure><h2>Binning</h2><p>You can bin the data by adding a new bin column to the dataframe</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df[<span class="string">'binning'</span>] = pd.cut(df[<span class="string">'percent'</span>], <span class="number">5</span>) <span class="comment"># 5 bins based on the percent column</span></span><br></pre></td></tr></table></figure><h2>Average a column</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">df</span><span class="selector-attr">[<span class="string">'column'</span>]</span><span class="selector-class">.mean</span>()</span><br></pre></td></tr></table></figure><h2>Find row at an index</h2><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.iloc<span class="string">[[int(totalRecords * .95)]]</span> # Find the row at the <span class="number">95</span>th percentile</span><br></pre></td></tr></table></figure><h2>Filter data rows</h2><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">data</span>.loc[(<span class="keyword">data</span>[<span class="string">'datetime'</span>] &gt; <span class="string">'2021-10-16'</span>)]</span><br></pre></td></tr></table></figure><h2>Sort</h2><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.sort<span class="constructor">_values(<span class="params">by</span>=['<span class="params">percent</span>'], <span class="params">ascending</span>=False)</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Part of an evolving cheat sheet&lt;/p&gt;
&lt;h2&gt;Read a file&lt;/h2&gt;
&lt;p&gt;For CSV use&lt;/p&gt;
&lt;figure class=&quot;highlight haskell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Running Serverless Offline with a Self-Signed SSL Certificate</title>
    <link href="https://westerndevs.com/_/serverless-offline-https/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/serverless-offline-https/</id>
    <published>2021-10-12T04:00:00.000Z</published>
    <updated>2022-02-16T21:42:11.443Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>If you find yourself in need of running serverless locally using <a href="https://www.serverless.com/plugins/serverless-offline/" target="_blank" rel="noopener">serverless offline</a> and you want an SSL certificate then fear not, it's not all that difficult. First you'll need an SSL certificate. For our purposes you we're going to use a self-signed certificate. This will cause browsers to complain but for local testing it isn't typically a big problem.</p><h2>Generate a Cert Using OpenSSL</h2><p>You should install OpenSSL (or one of the more secure alternatives like <a href="https://www.libressl.org/" target="_blank" rel="noopener">LibreSSL</a>) and then run</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -newkey rsa:<span class="number">2048</span> -nodes -keyout key.pem -x509 -days <span class="number">365</span> -<span class="keyword">out</span> cert.pem</span><br></pre></td></tr></table></figure><p>This will prompt you for a bunch of information about your organization. You can put anything you want in most of those fields but do pay attention to the <code>Common Name</code> field which needs to hold the value of <code>localhost</code>.</p><p>These are the answers I gave</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Country Name (2 letter code) [AU]:US</span><br><span class="line">State <span class="keyword">or</span> Province Name (full name) [Some-State]:TX</span><br><span class="line">Locality Name (eg, city) []:Austin</span><br><span class="line">Organization Name (eg, company) [Internet Widgits Pty Ltd]:Inventive</span><br><span class="line">Organizational Unit Name (eg, section) []:</span><br><span class="line">Common Name (e.g.<span class="built_in"> server </span>FQDN <span class="keyword">or</span> YOUR name) []:localhost</span><br><span class="line">Email<span class="built_in"> Address </span>[]:</span><br></pre></td></tr></table></figure><p>You should now have a <code>cert.perm</code> and a <code>key.pem</code> in your local directory. Copy these into a <code>cert</code> folder at the root of your serverless project.</p><h2>Running with the Certificate</h2><p>Now you need to tell serverless where to find your certificate. You can either run with the flag</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--httpsProtocol cert</span></span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">or <span class="keyword">update</span> your <span class="string">`serverless.yml`</span> <span class="keyword">to</span> <span class="keyword">include</span> the cert <span class="keyword">directory</span></span><br></pre></td></tr></table></figure><p>custom:serverless-offline:httpsProtocol: &quot;cert&quot;...</p><pre><code>## GotchasIf you're seeing a warning about an invalid certificate then check that you're accessing serverless via `localhost` and not `127.0.0.1` or `0.0.0.0`. SSL works with domain names so you need to use one, even if it is just `localhost`.</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;If you find yourself in need of running serverless locally using &lt;a href=&quot;https://www.serverless.com/plugins/serverless-offline/&quot; target=
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Configuration in Azure Isolated Functions</title>
    <link href="https://westerndevs.com/_/azure-isolated-functions-config/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/azure-isolated-functions-config/</id>
    <published>2021-10-05T04:00:00.000Z</published>
    <updated>2022-02-16T21:42:11.439Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>This is all done in the Program.cs. If you want to use the IOptions pattern which, let's face it, everybody does. Then you can start with creating your configuration classes (I like more than one so config for different parts of the app remain logical distinct). These are POCOs</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AuthConfiguration</span></span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> TenantId &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> ClientId &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> ClientSecret &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> RedirectUrl &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Then set this up in the host builder</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> host = <span class="keyword">new</span> HostBuilder()</span><br><span class="line">            .ConfigureFunctionsWorkerDefaults()</span><br><span class="line">            .ConfigureServices(container =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                container.AddOptions&lt;AuthConfiguration&gt;().Configure&lt;IConfiguration&gt;((settings, config) =&gt;</span><br><span class="line">                &#123;</span><br><span class="line">                    config.Bind(settings);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;)</span><br><span class="line">            .Build();</span><br></pre></td></tr></table></figure><p>If this looks familiar it's because it totally is! All of this uses the generic .NET host so this same sort of pattern should work in most .NET apps now.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is all done in the Program.cs. If you want to use the IOptions pattern which, let&#39;s face it, everybody does. Then you can start with
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Closed form Fibonacci</title>
    <link href="https://westerndevs.com/_/fibonacci/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/fibonacci/</id>
    <published>2021-10-05T04:00:00.000Z</published>
    <updated>2022-02-16T21:42:11.439Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>A favorite programming test question is the Fibonacci sequence. This is defined as either <code>1 1 2 3 5...</code> or <code>0 1 1 2 3 5...</code> depending on what you feel fib of 0 is. In either case fibonacci is the sum of the two previous terms. So fib(10) = fib(9) + fib(8). The reason this is a programming test favorite is because it forces people to think about recursion and even memoization for performance.</p><p>There is however a shortcut for this and that is to use the closed form which uses the golden ratio. We have two interesting values called Phi and phi with the former being the golden ratio and the latter being a value observed in nature for leaf dispersions.</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Phi = (<span class="number">1</span> + root(<span class="number">5</span>))/<span class="number">2</span></span><br><span class="line">phi = (<span class="number">1</span>-root(<span class="number">5</span>))/<span class="number">2</span></span><br></pre></td></tr></table></figure><p>We can use this to create Binet's formula (Jacques Philippe Marie Binet was a French mathematician born in 1786, although this formula is named for him it was really discovered by fellow French mathematician Abraham do Moivre a century earlier)</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fib(<span class="built_in">n</span>) = (<span class="built_in">Phi</span>^<span class="built_in">n</span> - <span class="built_in">phi</span>^<span class="built_in">n</span>)/(<span class="built_in">Phi</span> - <span class="built_in">phi</span>)</span><br></pre></td></tr></table></figure><p>In code we can do the following to generate all the fib numbers up to n</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">double</span> Phi = (<span class="number">1</span> + Math.Pow(<span class="number">5</span>,<span class="number">.5</span>))/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">double</span> phi = (<span class="number">1</span> - Math.Pow(<span class="number">5</span>,<span class="number">.5</span>))/<span class="number">2</span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">ulong</span>[] <span class="title">generateFibonaccisClosed</span>(<span class="params"><span class="keyword">int</span> n</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">ulong</span>[] fib = <span class="keyword">new</span> <span class="keyword">ulong</span>[n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        fib[i] = (<span class="keyword">ulong</span>)((Math.Pow(Phi, i)-Math.Pow(phi, i))/(Phi - phi));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fib;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The advantage here is that the closed form is constant time, constant memory and uses only about 3 64-bit values (fewer if you calculate phi and Phi as you go). It's certainly a lot of fun to break out in a programming test.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;A favorite programming test question is the Fibonacci sequence. This is defined as either &lt;code&gt;1 1 2 3 5...&lt;/code&gt; or &lt;code&gt;0 1 1 2 3 5.
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Filtering Datatables</title>
    <link href="https://westerndevs.com/_/datatable-filtering/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/datatable-filtering/</id>
    <published>2021-09-17T04:00:00.000Z</published>
    <updated>2022-02-16T21:42:11.439Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>Years back there was this crazy way of dealing with data in .NET called a DataSet. DataSets contained DataTables which contained a combination of DataRows and DataColumns. It was all loosely typed and keyed with strings. Basically a database inside of your process. Even when they were cool I felt uncomfortable using them. Because I sometimes maintain legacy code I run into these monstrosities.</p><p>Today's problem was that I needed to filter the contents of a table before bulk loading it. You can actually do simple filtering using a quasi-SQL like</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">var</span> dataRows = existingDataTable.<span class="keyword">Select</span>(<span class="string">"UserName = 'simon'"</span>)</span><br></pre></td></tr></table></figure><p>This gives you back a collection of DataRows which I guess you could inset back into the table after clearing it of rows. To make this useful there is an extension method called <code>CopyToDataTable</code> in <code>System.Data.DataExtension</code> (be sure to include the dll for this). Using that you can get back a full data table</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">var</span> dataTable = existingDataTable.<span class="keyword">Select</span>(<span class="string">"UserName = 'simon'"</span>).CopyToDataTable();</span><br></pre></td></tr></table></figure><p>In that same package, though, is a much better tool for filtering: converting the table to an IEnumerable. You still need to use some magic strings but that's somewhat unavoidable in data tables.</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var dt = existingDataTable.<span class="constructor">AsEnumerable()</span></span><br><span class="line">                    .<span class="constructor">Where(<span class="params">r</span> =&gt; <span class="params">r</span>.Field&lt;String&gt;(<span class="string">"UserName"</span>)</span><span class="operator"> == </span><span class="string">"Simon"</span>).<span class="constructor">CopyToDataTable()</span>;</span><br></pre></td></tr></table></figure><p>You can also do more advanced things like checking to see if something is a GUID</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> dt = existingDataTable.AsEnumerable()</span><br><span class="line">                    .Where(<span class="function"><span class="params">r</span> =&gt;</span> <span class="built_in">Guid</span>.TryParse(r.Field&lt;String&gt;(<span class="string">"Id"</span>), out <span class="keyword">var</span> _)).CopyToDataTable();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Years back there was this crazy way of dealing with data in .NET called a DataSet. DataSets contained DataTables which contained a combin
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Installing VSFTP from source</title>
    <link href="https://westerndevs.com/_/vsftpd/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/vsftpd/</id>
    <published>2021-09-08T04:00:00.000Z</published>
    <updated>2022-02-16T21:42:11.447Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>The 3.0.3 version of VSFTP seems to have an exploit against it so you should update to 3.0.5. However at the current time that has not been released in Debian upstream so we get to compile it ourselves!</p><p>First get and decompress the source</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https:<span class="comment">//security.appspot.com/downloads/vsftpd-3.0.5.tar.gz</span></span><br><span class="line">tar xvf vsftpd<span class="number">-3.0</span><span class="number">.5</span>.tar.gz</span><br><span class="line">cd vsftpd<span class="number">-3.0</span><span class="number">.5</span></span><br></pre></td></tr></table></figure><p>Now you're going to need to edit the <code>builddefs.h</code> specifically you want to enable SSL with</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VSF_BUILD_SSL</span></span><br></pre></td></tr></table></figure><p>You may need to install the open ssl headers</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt <span class="keyword">install</span> libssl-dev</span><br></pre></td></tr></table></figure><p>Next run a standard make/make install</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">make</span></span><br><span class="line"><span class="built_in">make</span> install</span><br></pre></td></tr></table></figure><p>That should be it. If you're replacing an apt sourced vsftpd then remember to uninstall that and you will have to update the init.d script to point at the new one which is in <code>/usr/local/sbin</code> instead of <code>/usr/sbin</code>. You could also change the install prefix but I like <code>local</code> better.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;The 3.0.3 version of VSFTP seems to have an exploit against it so you should update to 3.0.5. However at the current time that has not be
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">SQL Mail</title>
    <link href="https://westerndevs.com/_/enable-database-mail/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/enable-database-mail/</id>
    <published>2021-08-31T04:00:00.000Z</published>
    <updated>2022-02-16T21:42:11.439Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>Did you know you can hook up your SQL server (or Managed SQL on Azure) to an SMTP server and use it to send email. Terrible idea? Yes, probably. I really encourage people not to build business logic that might require creating an email into stored procs.  Required for legacy code? Yes, certainly.</p><p>You first need to tell SQL server how to talk to the mail server. This is done using the <code>sysmail_add_Account_sp</code></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">EXECUTE</span> msdb.dbo.sysmail_add_account_sp</span><br><span class="line">    <span class="variable">@account_name</span> = <span class="string">'Database Mail Account'</span>,</span><br><span class="line">    <span class="variable">@description</span> = <span class="string">'SQL Server Notification Service'</span>,</span><br><span class="line">    <span class="variable">@email_address</span> = <span class="string">'SQLServer<span class="variable">@somedomain</span>.com'</span>,</span><br><span class="line">    <span class="variable">@replyto_address</span> = <span class="string">'SQLServer<span class="variable">@somedomain</span>.com'</span>,</span><br><span class="line">    <span class="variable">@display_name</span> = <span class="string">'Database Mail Profile'</span>,</span><br><span class="line">    <span class="variable">@mailserver_name</span> = <span class="string">'smtp.office365.com'</span>,</span><br><span class="line">    <span class="variable">@port</span> = <span class="number">587</span>,</span><br><span class="line"><span class="variable">@username</span> = <span class="string">'SQLServer<span class="variable">@somedomain</span>.com'</span>,</span><br><span class="line"><span class="variable">@password</span> = <span class="string">'totallynotourpassword'</span>,</span><br><span class="line"><span class="variable">@enable_ssl</span> = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>With that in place you can set up a mail profile to use it</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">SELECT @sequence_number = COALESCE(MAX(profile_id),1) <span class="keyword">FROM</span> msdb.dbo.sysmail_profile;</span><br><span class="line"></span><br><span class="line">-- Create a mail profile</span><br><span class="line">EXECUTE msdb.dbo.sysmail_add_profile_sp</span><br><span class="line">    @profile_name = <span class="string">'Database Mail Profile'</span>,</span><br><span class="line">    @description = <span class="string">'Sends email from the db'</span>;</span><br><span class="line">                              </span><br><span class="line">-- <span class="builtin-name">Add</span> the account <span class="keyword">to</span> the profile</span><br><span class="line">EXECUTE msdb.dbo.sysmail_add_profileaccount_sp</span><br><span class="line">    @profile_name = <span class="string">'Database Mail Profile'</span>,</span><br><span class="line">    @account_name = <span class="string">'Database Mail Account'</span>,</span><br><span class="line">    @sequence_number = @sequence_number;</span><br><span class="line">                              </span><br><span class="line">-- Grant access <span class="keyword">to</span> the<span class="built_in"> profile </span><span class="keyword">to</span> the DBMailUsers role</span><br><span class="line">EXECUTE msdb.dbo.sysmail_add_principalprofile_sp</span><br><span class="line">    @profile_name = <span class="string">'Database Mail Profile'</span>,</span><br><span class="line">    @principal_id = 0,</span><br><span class="line">    @is_default = 1 ;</span><br></pre></td></tr></table></figure><p>You can then make use of <code>sp_send_dbmail</code> to send email</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">EXEC</span> msdb.dbo.[sp_send_dbmail]</span><br><span class="line">    <span class="variable">@profile_name</span> = <span class="string">'Database Mail Profile'</span>,</span><br><span class="line">    <span class="variable">@recipients</span> = <span class="string">'simon.timms<span class="variable">@somedomain</span>.com'</span>,</span><br><span class="line">    <span class="variable">@subject</span> = <span class="string">'Testing db email'</span>,</span><br><span class="line">    <span class="variable">@body</span> = <span class="string">'Hello friend, I'</span>m testing the database mail<span class="string">'</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Did you know you can hook up your SQL server (or Managed SQL on Azure) to an SMTP server and use it to send email. Terrible idea? Yes, pr
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Reauthenticate with Nuget</title>
    <link href="https://westerndevs.com/_/reauth-nuget/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/reauth-nuget/</id>
    <published>2021-08-31T04:00:00.000Z</published>
    <updated>2022-02-16T21:42:11.443Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>If you have a private nuget feed authenticated with a password chances are your password will eventually expire or change. For some reason Visual Studio and perhaps nuget under the covers aggressively caches that password and doesn't prompt you when the password doesn't work anymore. To change the password the easiest approach I've found is to use the nuget.exe command line tool and run</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c:\temp\nuget.exe sources <span class="keyword">update</span> -<span class="keyword">Name</span> <span class="string">"Teamcity"</span> -<span class="keyword">Source</span> <span class="string">"https://private.nuget.feed.com/httpAuth/app/nuget/feed/_Root/SomeThing/v2"</span> -UserName <span class="string">"simon.timms"</span> -<span class="keyword">Password</span> <span class="string">"Thisisactuallymypassword,no,really"</span></span><br><span class="line">C:\temp\nuget.exe <span class="keyword">list</span> -<span class="keyword">Source</span> teamcity</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;If you have a private nuget feed authenticated with a password chances are your password will eventually expire or change. For some reaso
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Which Key to use for Managed Identity in Keyvault</title>
    <link href="https://westerndevs.com/_/appliation-key-for-keyvault/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/appliation-key-for-keyvault/</id>
    <published>2021-08-13T04:00:00.000Z</published>
    <updated>2022-02-16T21:42:11.439Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>I have a terraform deployment which runs in azure pipeline. Azure pipelines is connected to Azure via a service connection. This service connection is registered as an application in the Azure AD of the Azure account. The problem I constantly run into is that I can't remember which id from the application should be granted keyvault access so the build pipeline can read and write to keyvault.</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">resource <span class="string">"azurerm_key_vault_access_policy"</span> <span class="string">"terraformaccess"</span> &#123;</span><br><span class="line">  <span class="attr">key_vault_id</span> = azurerm_key_vault.keyvault.id</span><br><span class="line"></span><br><span class="line">  <span class="attr">tenant_id</span> = local.tenant_id</span><br><span class="line">  <span class="attr">object_id</span> = ???????????????????</span><br><span class="line"></span><br><span class="line">  <span class="attr">key_permissions</span> = [</span><br><span class="line">    <span class="string">"Get"</span>,</span><br><span class="line">    <span class="string">"Create"</span>,</span><br><span class="line">    <span class="string">"List"</span>,</span><br><span class="line">    <span class="string">"Update"</span>,</span><br><span class="line">    <span class="string">"Verify"</span>,</span><br><span class="line">    <span class="string">"Delete"</span>,</span><br><span class="line">    <span class="string">"WrapKey"</span>,</span><br><span class="line">    <span class="string">"UnwrapKey"</span></span><br><span class="line">  ]</span><br><span class="line"></span><br><span class="line">  <span class="attr">secret_permissions</span> = [</span><br><span class="line">    <span class="string">"Get"</span>,</span><br><span class="line">    <span class="string">"List"</span>,</span><br><span class="line">    <span class="string">"Set"</span></span><br><span class="line">  ]</span><br><span class="line"></span><br><span class="line">  <span class="attr">storage_permissions</span> = [</span><br><span class="line">    <span class="string">"Get"</span>,</span><br><span class="line">    <span class="string">"List"</span>,</span><br><span class="line">    <span class="string">"Set"</span>,</span><br><span class="line">    <span class="string">"Update"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Maybe the value is in the portal somewhere:</p><p><img src="/images/2021-08-12-appliation-key-for-keyvault.md/2021-08-12-21-21-51.png" alt="">)</p><p>Nope.</p><p>It seems to be findable by doing either</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Login<span class="literal">-AzureRmAccount</span> <span class="literal">-SubscriptionId</span> &lt;your subscription id&gt;;</span><br><span class="line"><span class="variable">$spn</span>=(<span class="built_in">Get-AzureRmADServicePrincipal</span> <span class="literal">-SPN</span> &lt;the application id&gt;);</span><br><span class="line">echo <span class="variable">$spn</span>.Id</span><br></pre></td></tr></table></figure><p>or</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">az ad sp list --spn &lt;the application id&gt;</span><br></pre></td></tr></table></figure><p>Then look for <code>ObjectId</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;I have a terraform deployment which runs in azure pipeline. Azure pipelines is connected to Azure via a service connection. This service 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Stop Terraform Managing State for a Resource</title>
    <link href="https://westerndevs.com/_/stop-managing-resource/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/stop-managing-resource/</id>
    <published>2021-07-30T04:00:00.000Z</published>
    <updated>2022-02-16T21:42:11.443Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>Say you want to keep a resource but you want to stop terraform from managing it. You can ask terraform to update its state to forget about it. In my case I want terraform to forget it managing my Azure Static Web App because Terraform doesn't support all the options I need and will clobber the app.</p><p>I can run this</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">terraform state rm <span class="string">"azurerm_static_site.agentportal"</span></span><br></pre></td></tr></table></figure><p>If I decide to start managing the state again I can just run a terraform import to manage it again.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Say you want to keep a resource but you want to stop terraform from managing it. You can ask terraform to update its state to forget abou
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Storybook IFrame 404</title>
    <link href="https://westerndevs.com/_/storybook-iframe-404/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/storybook-iframe-404/</id>
    <published>2021-07-29T04:00:00.000Z</published>
    <updated>2022-02-16T21:42:11.443Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>If you're running into a 404 on the IFrame on storybook the mostly likely cause is that your directory path to where storybook is contains some encoded characters. In this case we had a project called <code>Agent%20Portal</code> on disk. Renaming it to just <code>AgentPortal</code> fixed up storybook right away.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;If you&#39;re running into a 404 on the IFrame on storybook the mostly likely cause is that your directory path to where storybook is contain
    
    </summary>
    
    
  </entry>
  
</feed>
