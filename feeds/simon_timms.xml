<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Western Devs</title>
  
  <link href="/feeds/simon_timms" rel="self" type="application/atom+xml"/>
  <link href="https://westerndevs.com" rel="alternate" type="application/atom+xml"/>
  
  <updated>2024-01-29T19:23:30.961Z</updated>
  <id>https://westerndevs.com/</id>
  
  <author>
    <name>Western Devs</name>
	<uri>https://westerndevs.com</uri>
    <email>info@westerndevs.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title type="html">Docker COPY not Finding Files</title>
    <link href="https://westerndevs.com/_/cannot-copy/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/cannot-copy/</id>
    <published>2023-11-23T05:00:00.000Z</published>
    <updated>2024-01-29T19:23:30.961Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>My dad once told me that there are no such things a problems just solutions waiting to be applied. I don't know what book he'd just read or course he'd just been on to spout such nonsense but I've never forgotten it.</p><p>Today my not problem was running a docker build wasn't copying the files I was expecting it to. In particular I had a <code>themes</code> directory which was not ending up in the image and in fact the build was failing with something like</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ERROR: </span>failed to solve: failed to compute cache key: failed to calculate checksum of ref b1f3faa4-fdeb<span class="string">-41</span>ed-b016-fac3862d370a::pjh3jwhj2huqmcgigjh9udlh2: "/themes": not found</span><br></pre></td></tr></table></figure><p>I was really confused because <code>themes</code> absolutly did exist on disk. It was as if it wasn't being added to the build context. In fact it wasn't being added and, as it turns out, this was because my .dockerignore file contained</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">**</span></span><br></pre></td></tr></table></figure><p>Which ignores everything from the local directory. That seemed a bit extreme so I changed it to</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">** </span></span><br><span class="line">!themes</span><br></pre></td></tr></table></figure><p>With this in place the build worked as expected.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;My dad once told me that there are no such things a problems just solutions waiting to be applied. I don&#39;t know what book he&#39;d just read 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Connect to a Service Container in Github Actions</title>
    <link href="https://westerndevs.com/_/connect-to-service-container/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/connect-to-service-container/</id>
    <published>2023-11-20T05:00:00.000Z</published>
    <updated>2024-01-29T19:23:30.961Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>Increasingly there is a need to run containers during a github action build to run realistic tests. In my specific scenario I had a database integration test that I wanted to run against a postgres database with our latest database migrations applied.</p><p>We run our builds inside a multi-stage docker build so we actually need to have a build container communicate with the database container during the build phase. This is easy enough in the run phase but in the build phase there is just a flag you can pass to the build called <code>network</code> which takes an argument but the arguments it can take don't appear to be documented anywhere. After significant trial and error I found that the argument it takes that we want is <code>host</code>. This will build the container using the host networking. As we surfaced the ports for postgres in our workflow file like so</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">postgres:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">postgres:15.3</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="number">5432</span><span class="string">:5432</span></span><br><span class="line">    <span class="attr">env:</span></span><br><span class="line">        <span class="attr">POSTGRES_DB:</span> <span class="string">default</span></span><br><span class="line">        <span class="attr">POSTGRES_USER:</span> <span class="string">webapp_user</span></span><br><span class="line">        <span class="attr">POSTGRES_PASSWORD:</span> <span class="string">password</span></span><br><span class="line">    <span class="attr">options:</span> <span class="string">&gt;-</span></span><br><span class="line">        <span class="string">--health-cmd</span> <span class="string">pg_isready</span></span><br><span class="line">        <span class="string">--health-interval</span> <span class="string">10s</span></span><br><span class="line">        <span class="string">--health-timeout</span> <span class="string">5s</span></span><br><span class="line">        <span class="string">--health-retries</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><p>We are able to access the database from the build context with <code>127.0.0.1</code>. So we can pass in a variable to our container build</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build --network=host . --tag $&#123;&#123; <span class="keyword">env</span>.DOCKER_REGISTRY_NAME &#125;&#125;/$&#123;&#123; <span class="keyword">env</span>.DOCKER_IMAGE_NAME &#125;&#125;:$&#123;&#123; github.run_number &#125;&#125; --build-<span class="keyword">arg</span> <span class="string">'DATABASE_CONNECTION_STRING=$&#123;&#123; env.DATABASE_CONNECTION_STRING &#125;&#125;'</span></span><br></pre></td></tr></table></figure><p>With all this in place the tests run nicely in the container during the build. Phew.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Increasingly there is a need to run containers during a github action build to run realistic tests. In my specific scenario I had a datab
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Setting up SMTP for Keycloak Using Mailgun</title>
    <link href="https://westerndevs.com/_/smtp-setup-for-mailgun/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/smtp-setup-for-mailgun/</id>
    <published>2023-10-30T04:00:00.000Z</published>
    <updated>2024-01-29T19:23:30.965Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>Quick entry here about setting up Mailgun as the email provider in Keycloak. To do this first you'll need to create SMTP credentials in Mailgun and note the generated password</p><p><img src="/images/2023-10-30-smtp_setup_for_mailgun.md/2023-10-30-17-34-55.png" alt="">)</p><p>Next in Keycloak set the credentials up in the realm settings under email.<img src="/images/2023-10-30-smtp_setup_for_mailgun.md/2023-10-30-17-34-24.png" alt="">)</p><p>Check both the SSL boxes and give it port 465.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Quick entry here about setting up Mailgun as the email provider in Keycloak. To do this first you&#39;ll need to create SMTP credentials in M
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Load Testing with Artillery</title>
    <link href="https://westerndevs.com/_/artillery/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/artillery/</id>
    <published>2023-10-14T04:00:00.000Z</published>
    <updated>2024-01-29T19:23:30.961Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>Load testing a site or an API can be a bit involved. There are lots of things to consider like what the traffic on your site typically looks like, what peaks look like and so forth. That's mostly outside the scope of this article which is just about load testing with artillery.</p><h2>Scenario</h2><p>We have an API that we call which is super slow and super fragile. We were recently told by the team that maintains it that they'd made improvements and increased our rate limit from something like 200 requests per minute to 300 and could we test it. So sure, I guess we can do your job for you. For this we're going to use the load testing tool <a href="https://www.artillery.io/" target="_blank" rel="noopener">artillery</a>.</p><h2>Getting started</h2><p>Artillery is a node based tool so you'll need to have node installed.  You can install artillery with <code>npm install -g artillery</code>.</p><p>You then write a configuration file to tell artillery what to do. Here's the one I used for this test (with the names of the guilty redacted):</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">config:</span> </span><br><span class="line">  <span class="attr">target:</span> <span class="string">https://some.company.com</span></span><br><span class="line">  <span class="attr">phases:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">duration:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">arrivalRate:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">http:</span></span><br><span class="line">    <span class="attr">timeout:</span> <span class="number">100</span></span><br><span class="line"><span class="attr">scenarios:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">flow:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">log:</span> <span class="string">"Adding new user</span></span><br><span class="line"><span class="string">    - post:</span></span><br><span class="line"><span class="string">        url: /2020-04/graphql</span></span><br><span class="line"><span class="string">        body: |</span></span><br><span class="line"><span class="string">          &#123;"</span><span class="string">query":"query</span> <span class="string">readAllEmployees($limit:</span> <span class="string">Int!,</span> <span class="string">$cursor:</span> <span class="string">String,</span> <span class="string">$statusFilter:</span> <span class="string">[String!]!)</span> <span class="string">&#123;\n</span> <span class="string">company</span> <span class="string">&#123;\n</span> <span class="string">employees(filter:</span> <span class="string">&#123;status:</span> <span class="string">&#123;in:</span> <span class="string">$statusFilter&#125;&#125;,</span> <span class="attr">pagination:</span> <span class="string">&#123;first:</span> <span class="string">$limit,</span> <span class="attr">after:</span> <span class="string">$cursor&#125;)</span> <span class="string">&#123;\n</span> <span class="string">pageInfo</span> <span class="string">&#123;\n</span> <span class="string">hasNextPage\n</span> <span class="string">startCursor\n</span> <span class="string">endCursor\n</span> <span class="string">hasPreviousPage\n</span> <span class="string">&#125;\n</span> <span class="string">nodes</span> <span class="string">&#123;\n</span> <span class="string">id\n</span> <span class="string">firstName\n</span> <span class="string">lastName\n\t\tmiddleName\n</span> <span class="string">birthDate\n</span> <span class="string">displayName\n</span> <span class="string">employmentDetail</span> <span class="string">&#123;\n</span> <span class="string">employmentStatus\n</span> <span class="string">hireDate\n</span> <span class="string">terminationDate\n</span> <span class="string">&#125;\n</span> <span class="string">taxIdentifiers</span> <span class="string">&#123;\n</span> <span class="string">taxIdentifierType\n</span> <span class="string">value\n</span> <span class="string">&#125;\n</span> <span class="string">payrollProfile</span> <span class="string">&#123;\n</span> <span class="string">preferredAddress</span> <span class="string">&#123;\n</span> <span class="string">streetAddress1\n</span> <span class="string">streetAddress2\n</span> <span class="string">city\n</span> <span class="string">zipCode\n</span> <span class="string">county\n</span> <span class="string">state\n</span> <span class="string">country\n</span> <span class="string">&#125;\n</span> <span class="string">preferredEmail\n</span> <span class="string">preferredPhone\n</span> <span class="string">compensations</span> <span class="string">&#123;\n</span> <span class="string">id\n</span> <span class="string">timeWorked</span> <span class="string">&#123;\n</span> <span class="string">unit\n</span> <span class="string">value\n</span> <span class="string">&#125;\n</span> <span class="string">active\n</span> <span class="string">amount\n</span> <span class="string">multiplier\n</span> <span class="string">employerCompensation</span> <span class="string">&#123;\n</span> <span class="string">id\n</span> <span class="string">name\n</span> <span class="string">active\n</span> <span class="string">amount\n</span> <span class="string">timeWorked</span> <span class="string">&#123;\n</span> <span class="string">unit\n</span> <span class="string">value\n</span> <span class="string">&#125;\n</span> <span class="string">multiplier\n</span> <span class="string">&#125;\n</span> <span class="string">&#125;\n</span> <span class="string">&#125;\n</span> <span class="string">&#125;\n</span> <span class="string">&#125;\n</span> <span class="string">&#125;\n&#125;\n","variables":&#123;</span></span><br><span class="line">          <span class="attr">"limit":</span> <span class="number">100</span><span class="string">,</span></span><br><span class="line">          <span class="attr">"cursor":</span> <span class="literal">null</span><span class="string">,</span></span><br><span class="line">          <span class="attr">"statusFilter":</span> <span class="string">[</span></span><br><span class="line">          <span class="string">"ACTIVE"</span><span class="string">,</span></span><br><span class="line">          <span class="string">"TERMINATED"</span><span class="string">,</span></span><br><span class="line">          <span class="string">"NOTONPAYROLL"</span><span class="string">,</span></span><br><span class="line">          <span class="string">"UNPAIDLEAVE"</span><span class="string">,</span></span><br><span class="line">          <span class="string">"PAIDLEAVE"</span></span><br><span class="line">          <span class="string">]</span></span><br><span class="line">          <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">headers:</span></span><br><span class="line">          <span class="attr">Content-Type:</span> <span class="string">application/json</span></span><br><span class="line">          <span class="attr">Authorization:</span> <span class="string">Bearer</span> <span class="string">&lt;redacted&gt;</span></span><br></pre></td></tr></table></figure><p>As you can see this is graphql and it is a private API so we need to pass in a bearer token. The body I just stole from our postman collection so it isn't well formatted.</p><p>Running this is as simple as running <code>artillery run &lt;filename&gt;</code>.</p><p>At the top you can see arrival rates and duration. This is saying that we want to ramp up to 1 requests per second over the course of 1 second. So basically this is just proving that our request works. The first time I ran this I only got back 400 errors. To get the body of the response to allow me to see why I was getting a 400 I set</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">DEBUG</span>=http,http:capture,http:response</span><br></pre></td></tr></table></figure><p>Once I had the simple case working I was able to increase the rates to higher levels. To do this I ended up adjusting the phases to look like</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">phases:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">duration:</span> <span class="number">30</span></span><br><span class="line">    <span class="attr">arrivalRate:</span> <span class="number">30</span></span><br><span class="line">    <span class="attr">maxVusers:</span> <span class="number">150</span></span><br></pre></td></tr></table></figure><p>This provisions 30 users a second up to a maximum of 150 users - so that takes about 5 seconds to saturate. I left the duration higher because I'm lazy and artillery is smart enough to not provision more. Then to ensure that I was pretty constantly hitting the API with the maximum number of users I added a loop to the scenario like so:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">scenarios:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">flow:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">log:</span> <span class="string">"New virtual user running"</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">loop:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">post:</span></span><br><span class="line">          <span class="attr">url:</span> <span class="string">/2020-04/graphql</span></span><br><span class="line">          <span class="attr">body:</span> <span class="string">|</span></span><br><span class="line">            <span class="string">&#123;"query":"query</span> <span class="string">readAllEmployeePensions($limit:</span> <span class="string">Int!,</span> <span class="string">$cursor:</span> <span class="string">String,</span> <span class="string">$statusFilter:</span> <span class="string">[String!]!)</span> <span class="string">&#123;\n</span> <span class="string">company</span> <span class="string">&#123;\n</span> <span class="string">employees(filter:</span> <span class="string">&#123;status:</span> <span class="string">&#123;</span> <span class="attr">in:</span> <span class="string">$statusFilter</span> <span class="string">&#125;&#125;,</span> <span class="attr">pagination:</span> <span class="string">&#123;first:</span> <span class="string">$limit,</span> <span class="attr">after:</span> <span class="string">$cursor&#125;)</span> <span class="string">&#123;\n</span> <span class="string">pageInfo</span> <span class="string">&#123;\n</span> <span class="string">hasNextPage\n</span> <span class="string">startCursor\n</span> <span class="string">endCursor\n</span> <span class="string">hasPreviousPage\n</span> <span class="string">&#125;\n</span> <span class="string">nodes</span> <span class="string">&#123;\n</span> <span class="string">id\n</span> <span class="string">displayName\n</span> <span class="string">payrollProfile</span> <span class="string">&#123;\n</span> <span class="string">pensions</span> <span class="string">&#123;\n</span> <span class="string">id\n</span> <span class="string">active\n</span> <span class="string">employeeSetup</span> <span class="string">&#123;\n</span> <span class="string">amount</span> <span class="string">&#123;\n</span> <span class="string">percentage\n</span> <span class="string">value\n</span> <span class="string">&#125;\n</span> <span class="string">cappings</span> <span class="string">&#123;\n</span> <span class="string">amount\n</span> <span class="string">timeInterval\n</span> <span class="string">&#125;\n</span> <span class="string">&#125;\n</span> <span class="string">employerSetup</span> <span class="string">&#123;\n</span> <span class="string">amount</span> <span class="string">&#123;\n</span> <span class="string">percentage\n</span> <span class="string">value\n</span> <span class="string">&#125;\n</span> <span class="string">cappings</span> <span class="string">&#123;\n</span> <span class="string">amount\n</span> <span class="string">timeInterval\n</span> <span class="string">&#125;\n</span> <span class="string">&#125;\n</span> <span class="string">employerPension</span> <span class="string">&#123;\n</span> <span class="string">id\n</span> <span class="string">name\n</span> <span class="string">statutoryPensionPolicy\n</span> <span class="string">&#125;\n</span> <span class="string">customFields</span> <span class="string">&#123;\n</span> <span class="string">name\n</span> <span class="string">value\n</span> <span class="string">&#125;\n</span> <span class="string">&#125;\n</span> <span class="string">&#125;\n</span> <span class="string">&#125;\n</span> <span class="string">&#125;\n</span> <span class="string">&#125;\n&#125;\n","variables":&#123;</span></span><br><span class="line">            <span class="attr">"limit":</span> <span class="number">100</span><span class="string">,</span></span><br><span class="line">            <span class="attr">"statusFilter":</span> <span class="string">[</span></span><br><span class="line">            <span class="string">"ACTIVE"</span></span><br><span class="line">            <span class="string">]</span></span><br><span class="line">            <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">headers:</span></span><br><span class="line">            <span class="attr">Content-Type:</span> <span class="string">application/json</span></span><br><span class="line">            <span class="attr">Authorization:</span> <span class="string">Bearer</span> <span class="string">&lt;redacted&gt;</span></span><br><span class="line">      <span class="attr">count:</span> <span class="number">100</span></span><br></pre></td></tr></table></figure><p>Pay attention to that count at the bottom.</p><p>I was able to use this to fire thousands of requests at the service and prove out that our rate limit was indeed higher than it was before and we could raise our concurrency.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Load testing a site or an API can be a bit involved. There are lots of things to consider like what the traffic on your site typically lo
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Alerting on Blob Storage Throttling</title>
    <link href="https://westerndevs.com/_/storage-alert-rules/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/storage-alert-rules/</id>
    <published>2023-03-30T04:00:00.000Z</published>
    <updated>2024-01-29T19:23:30.965Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>Blob storage is the workhorse of Azure. It is one of the original services and has grown with the times to allow storing data in a variety of formats. It is able to scale perhaps not to the moon but certainly to objects in low earth orbit(LEO).</p><p>One of my clients has a fair bit of data stored in a file share hosted in Azure Storage. They do nightly processing on this data using a legacy IaaS system. We were concerned that we might saturate the blob storage account with our requests. Fortunately, there are metrics we can use to understand what's going on inside blob storage. Nobody wants to monitor these all the time so we set up some alerting rules for the storage account.</p><p>Alert rules can easily be created by going to the file share in the storage account and clicking on metrics. Then in the top bar click on <code>New Alert Rule</code></p><p>The typical rules we applied were</p><ol><li>Alerting if we reach a certain % of capacity. We set this to about 90%<img src="/images/2023-03-30-storage-alert-rules.md/2023-03-30-07-32-46.png" alt="">)</li><li>Alerting if we see the number of transactions fall outside a typical range. We used a dynamic rule for this to account for how the load on this batch processing system changes overnight.<img src="/images/2023-03-30-storage-alert-rules.md/2023-03-30-07-35-25.png" alt="">)</li></ol><p>However there was one additional metric we wanted to catch: when we have hit throttling. This was a bit trickier to set up because we've never actually hit this threshold. This means that the dimensions to filter on don't actually show up in the portal. They must be entered by hand.</p><p>These are the normal values we see<img src="/images/2023-03-30-storage-alert-rules.md/2023-03-30-07-38-07.png" alt="">)</p><p>By clicking on add custom value we were able to add 3 new response codes</p><ul><li>ClientAccountBandwidthThrottlingError</li><li>ClientShareIopsThrottlingError</li><li>ClientThrottlingError</li></ul><p><img src="/images/2023-03-30-storage-alert-rules.md/2023-03-30-07-40-59.png" alt="">)</p><p>With these in place we can be confident that should these ever occur we'll be alerted to it</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Blob storage is the workhorse of Azure. It is one of the original services and has grown with the times to allow storing data in a variet
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Importing Vuetify via ESM</title>
    <link href="https://westerndevs.com/_/vuetify-esm/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/vuetify-esm/</id>
    <published>2023-03-15T04:00:00.000Z</published>
    <updated>2024-01-29T19:23:30.969Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>If you want a quick way to add Vue 3 and Vuetify to your project via the UMD CDN then you can do so using ESM. ESM are ECMAScript Modules and are now supported by the majority of browsers. This is going to look like</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"importmap"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    &#123; <span class="string">"imports"</span>: </span></span><br><span class="line"><span class="actionscript">        &#123; <span class="string">"vue"</span>: <span class="string">"https://unpkg.com/vue@3.2.47/dist/vue.esm-browser.js"</span> &#125;</span></span><br><span class="line"><span class="actionscript">          <span class="string">"vuetify"</span>: <span class="string">"https://unpkg.com/vuetify@3.1.10/dist/vuetify.esm.js"</span></span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"module"</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">import</span> &#123;createApp&#125; <span class="keyword">from</span> <span class="string">'vue'</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">import</span> &#123; createVuetify &#125; <span class="keyword">from</span> <span class="string">'vuetify'</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> vuetify = createVuetify()</span></span><br><span class="line"></span><br><span class="line">    createApp(&#123;</span><br><span class="line">      data() &#123;</span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">          message: <span class="string">'Hello Vue!'</span></span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="actionscript">    &#125;).use(vuetify).mount(<span class="string">'#app'</span>)</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>The import map is a way to map a module name to a URL. This is necessary because the Vuetify ESM module imports from Vue. Don't forget you'll also need to add in the CSS for Vuetify</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;If you want a quick way to add Vue 3 and Vuetify to your project via the UMD CDN then you can do so using ESM. ESM are ECMAScript Modules
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">App Service Quota Issue</title>
    <link href="https://westerndevs.com/_/app-service-quota/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/app-service-quota/</id>
    <published>2023-03-04T05:00:00.000Z</published>
    <updated>2024-01-29T19:23:30.957Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>I was deploying an app service in a new region today and ran into a quota issue. The error message was:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error: creating<span class="built_in"> Service </span>Plan: (Serverfarm Name <span class="string">"***devplan"</span> /<span class="built_in"> Resource Group </span><span class="string">"***_dev"</span>): web.AppServicePlansClient#CreateOrUpdate: Failure sending request: <span class="attribute">StatusCode</span>=401 -- Original Error: <span class="attribute">Code</span>=<span class="string">"Unauthorized"</span> <span class="attribute">Message</span>=<span class="string">"This region has quota of 0 instances for your subscription. Try selecting different region or SKU."</span></span><br></pre></td></tr></table></figure><p>This was a pretty simple deployment to an S1 app service plan. I've run into this before and it's typically easy to request a bump in quota in the subscription. My problem today was that it isn't obvious what CPU quota I need to request. I Googled around and found some suggestion that S1 ran on A series VMs but that wasn't something I had any limits on.</p><p>Creating in the UI gave the same error</p><p><img src="/images/2023-02-10-app-service-quota.md/2023-02-10-20-45-53.png" alt="">)</p><p>I asked around and eventually somebody in the know was able to look into the consumption in that region. The cloud was full! Well not full but creation of some resources was restricted. Fortunately this was just a dev deployment so I was able to move to a different region and get things working. It would have been pretty miserable if this was a production deployment or if I was adding onto an existing deployment.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;I was deploying an app service in a new region today and ran into a quota issue. The error message was:&lt;/p&gt;
&lt;figure class=&quot;highlight rout
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Azure KeyVault Reference Gotcha</title>
    <link href="https://westerndevs.com/_/azure-keyvaul-reference-gotcha/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/azure-keyvaul-reference-gotcha/</id>
    <published>2023-03-04T05:00:00.000Z</published>
    <updated>2024-01-29T19:23:30.961Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>I was working on a deployment today and ran into an issue with a keyvault reference. In the app service the keyvault reference showed that it wasn't able to get the secret. The reference seemed good but I wasn't seeing what I wanted to see which was a couple of green checkmarks</p><p><img src="/images/2023-03-03-azure-keyvaul-reference-gotcha.md/2023-03-03-21-10-36.png" alt="">)</p><p>The managed identity on the app service had only GET access to the keyvault. I added LIST access and the reference started working. I'm not sure why this is but I'm guessing that the reference is doing a LIST to get the secret and then a GET to get the secret value.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;I was working on a deployment today and ran into an issue with a keyvault reference. In the app service the keyvault reference showed tha
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Allow Comments in JSON Payload in ExpressJS</title>
    <link href="https://westerndevs.com/_/express-json-comments/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/express-json-comments/</id>
    <published>2023-02-16T05:00:00.000Z</published>
    <updated>2024-01-29T19:23:30.961Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>Officially comments are not supported in the JSON format. In fact this lack of ability to comment is one of the reasons that lead to the downfall of the JSON based project system during the rewrite of the .NET some years back. However they sure can be useful to support. In my case I wanted to add some comments to the body of a request to explain a parameter in Postman. I like to keep comments as close to the thing they describe as possible so I didn't want this on a wiki somewhere nobody would ever find.</p><p>The content looked something like</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"data"</span>: &#123;</span><br><span class="line">        <span class="attr">"form_data"</span>: &#123;</span><br><span class="line">            <span class="attr">"effective_date"</span>: <span class="string">"2023-02-23"</span>,</span><br><span class="line">            <span class="attr">"match_on_per_pay_period_basis"</span>: <span class="number">0</span>, <span class="comment">/* 0 if yes, 1 if no */</span></span><br><span class="line">            <span class="attr">"simple_or_tiered"</span>: <span class="number">1</span>, <span class="comment">/* 0 if simple 1 if tiered */</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>This was going to an ExpressJS application which was parsing the body using <code>body-parser</code>. These days we can just use <code>express.json()</code> and avoid taking on that additional dependency. The JSON parsing in both these is too strict to allow for comments. Fortunately, we can use middleware to resolve the issue. There is a swell package called <code>strip-json-comments</code> which does the surprisingly difficult task of stripping comments. We can use that.</p><p>The typical json paring middleware looks like</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">app.use(express.json())</span><br><span class="line"></span><br><span class="line">or </span><br><span class="line"></span><br><span class="line">app.use(bodyParser.json())</span><br></pre></td></tr></table></figure><p>Instead we can do</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> stripJsonComments <span class="keyword">from</span> <span class="string">'strip-json-comments'</span>;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">app.use(express.text&#123;</span><br><span class="line">    type: <span class="string">"application/json"</span> <span class="comment">// </span></span><br><span class="line">&#125;) <span class="comment">//or app.use(bodyParser.text(&#123;type: "application/json&#125;))</span></span><br><span class="line">app.use(<span class="function">(<span class="params">req,res,next</span>)=&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(req.body)&#123;</span><br><span class="line">        req.body = stripJsonComments(req.body);</span><br><span class="line">    &#125;</span><br><span class="line">    next();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>This still allows us to take advantage of the compression and character encoding facilities in the original parser while also intercepting and cleaning up the JSON payload.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Officially comments are not supported in the JSON format. In fact this lack of ability to comment is one of the reasons that lead to the 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Excel and Ruby</title>
    <link href="https://westerndevs.com/_/ruby-excel/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/ruby-excel/</id>
    <published>2023-02-15T05:00:00.000Z</published>
    <updated>2024-01-29T19:23:30.965Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>Excel is the king of spreadsheets and I often find myself in situation where I have to write our Excel files in an application. I'd say that as an application grows the probability of needing Excel import or export approaches 1. Fortunately, there are lots of libraries out there to help with Excel across just about every language. The quality and usefuleness of these libraries varies a lot. In Ruby land there seem to be a few options.</p><h2>Spreadsheet</h2><p>https://github.com/zdavatz/spreadsheet/</p><p>As the name suggests this library deals with Excel spreadsheets. It is able to both read and write them by using Spreadsheet::Excel Library and the ParseExcel Library. However it only supports the older XLS file format. While this is still widely used it is not the default format for Excel 2007 and later. I try to stay clear of the format as much as possible. There have not been any releases of this library in about 18 months but there haven't been any releases of the XLS file format for decades so it doesn't seem like a big deal.</p><p>The library can be installed using</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gem <span class="keyword">install</span> spreadsheet</span><br></pre></td></tr></table></figure><p>Then you can use it like so</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">'spreadsheet'</span></span><br><span class="line"></span><br><span class="line">workbook = Spreadsheet.open(<span class="string">"test.xls"</span>)</span><br><span class="line">worksheet = workbook.worksheet <span class="number">0</span></span><br><span class="line">worksheet.rows[<span class="number">1</span>][<span class="number">1</span>] = <span class="string">"Hello there!"</span></span><br><span class="line">workbook.write(<span class="string">"test2.xls"</span>)</span><br></pre></td></tr></table></figure><p>There are some limitations around editing files such as cell formats not updating but for most things it should be fine.</p><h2>RubyXL</h2><p>https://github.com/weshatheleopard/rubyXL</p><p>This library works on the more modern XLSX file formats. It is able to read and write files with modifications. However there are some limitations such as being unable to insert images</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">'rubyXL'</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># only do this if you don't care about memory usage, otherwise you can load submodules separately</span></span><br><span class="line">  <span class="comment"># depending on what you need</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">'rubyXL/convenience_methods'</span></span><br><span class="line"></span><br><span class="line">workbook = RubyXL::Parser.parse(<span class="string">"test.xlsx"</span>)</span><br><span class="line">worksheet = workbook[<span class="number">0</span>]</span><br><span class="line">cell = worksheet.cell_at(<span class="string">'A1'</span>)</span><br><span class="line">cell.change_contents(<span class="string">"Hello there!"</span>)</span><br><span class="line">workbook.write(<span class="string">"test2.xlsx"</span>)</span><br></pre></td></tr></table></figure><h2>CAXLSX</h2><p>https://github.com/caxlsx/caxlsx</p><p>This library is the community supported version of AXLSX. It is able to generate XLSX files but not read them or modify them. There is rich support for charts, images and other more advanced excel features. The</p><p>Install using</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gem <span class="keyword">install</span> caxlsx</span><br></pre></td></tr></table></figure><p>And then a simple example looks like</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">'axlsx'</span></span><br><span class="line"></span><br><span class="line">p = Axlsx::Package.new</span><br><span class="line">workbook = p.workbook</span><br><span class="line"></span><br><span class="line">wb.add_worksheet(<span class="symbol">name:</span> <span class="string">'Test'</span>) <span class="keyword">do</span> <span class="params">|sheet|</span></span><br><span class="line">  sheet.add_row [<span class="string">'Hello there!'</span>]</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">p.serialize <span class="string">"test.xlsx"</span></span><br></pre></td></tr></table></figure><p>Of all the libraries mentioned here the documentation for this one is the best. It is also the most actively maintained. The examples directory https://github.com/caxlsx/caxlsx/tree/master/examples gives a plethora of examples of how to use the library.</p><h2>Fast Excel</h2><p>https://github.com/Paxa/fast_excel</p><p>This library focuses on being the fastest excel library for ruby. It is actually written in C to speed it up so comes with all the caveats about running native code. Similar to CAXLSX it is only able to read and write files and not modify them.</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">'fast_excel'</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># constant_memory: true streams changes to disk so it means that you cannot</span></span><br><span class="line">  <span class="comment"># modify an already written record</span></span><br><span class="line">workbook = FastExcel.open(<span class="string">"test.xlsx"</span>, <span class="symbol">constant_memory:</span> <span class="literal">true</span>)</span><br><span class="line">worksheet = workbook.add_worksheet(<span class="string">"Test"</span>)</span><br><span class="line"></span><br><span class="line">bold = workbook.bold_format</span><br><span class="line">worksheet.set_column(<span class="number">0</span>, <span class="number">0</span>, FastExcel::DEF_COL_WIDTH, bold)</span><br><span class="line">worksheet &lt;&lt; [<span class="string">"Hello World"</span>]</span><br><span class="line">workbook.close</span><br></pre></td></tr></table></figure><p>As you can see here the library really excels at adding consistently shaped rows. You're unlikely to get a complex spreadsheet with headers and footers built using this tooling.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Excel is the king of spreadsheets and I often find myself in situation where I have to write our Excel files in an application. I&#39;d say t
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Bulk Insert SQL Geometry on .NET Core</title>
    <link href="https://westerndevs.com/_/bulk-insert-sql-geometry/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/bulk-insert-sql-geometry/</id>
    <published>2022-11-17T05:00:00.000Z</published>
    <updated>2024-01-29T19:23:30.961Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>I have been updating an application from full framework to .NET 6 this week. One of the things this app does is bulk load data into SQL Server. Normally this works just fine but some of the data is geography data which requires a special package to be installed: <code>Microsoft.SqlServer.Types</code>. This package is owned by the SQL server team so, as you'd expect, it is ridiculously behind the times. Fortunately, they are working on updating it and it is now available for Netstandard 2.1 in a preview mode.</p><p>The steps I needed to take to update the app were:</p><ol><li>Install the preview package for <code>Microsoft.SqlServer.Types</code></li><li>Update the SQL client package from System.Data.SqlClient to Microsoft.Data.SqlClient</li></ol><p>After that the tests we had for inserting polygons worked just great. This has been a bit of a challenge over the years but I'm delighted that we're almost there. We just need a non-preview version of the types package and we should be good to go.</p><h2>Gotchas</h2><p>When I'd only done step 1 I ran into errors like</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">System.InvalidOperationException : The given value of<span class="built_in"> type </span>SqlGeometry <span class="keyword">from</span> the data source cannot be converted <span class="keyword">to</span><span class="built_in"> type </span>udt of the specified target column.</span><br><span class="line">---- System.ArgumentException : Specified<span class="built_in"> type </span>is <span class="keyword">not</span> registered on the target server. Microsoft.SqlServer.Types.SqlGeometry, Microsoft.SqlServer.Types, <span class="attribute">Version</span>=16.0.0.0, <span class="attribute">Culture</span>=neutral, <span class="attribute">PublicKeyToken</span>=89845dcd8080cc91.</span><br></pre></td></tr></table></figure><p>I went down a rabbit hole on that one before spotting a post from MVP Erik Jensen https://github.com/ErikEJ/EntityFramework6PowerTools/issues/103 which sent me in the right direction.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;I have been updating an application from full framework to .NET 6 this week. One of the things this app does is bulk load data into SQL S
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Removing Azure Backups in Terraform</title>
    <link href="https://westerndevs.com/_/azure-backus-protip/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/azure-backus-protip/</id>
    <published>2022-11-11T05:00:00.000Z</published>
    <updated>2024-01-29T19:23:30.961Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>If you have a VM backup in your Terraform state and need to get rid of it be aware that it is probably going to break your <a href="https://blog.simontimms.com/2022/11/01/theory-of-terraform-github.-actions/" target="_blank" rel="noopener">deployment pipeline</a>. The reason is that Terraform will delete the item but then find that the resource still there. This is because backup deletion takes a while (say 14 days). Eventually the backup will delete but not before Terraform times out.</p><p>The solution I'm using is to just go in an manually delete the backup from the terraform state to unblock my pipelines.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">terraform state list | grep &lt;name of your backup&gt;</span><br><span class="line">-- make note of the resource identifier --</span><br><span class="line">terraform state rm &lt;found resource identifier&gt;</span><br></pre></td></tr></table></figure><p>Editing Terraform state seems scary but it's not too bad after you do it a bit. Take backups!</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;If you have a VM backup in your Terraform state and need to get rid of it be aware that it is probably going to break your &lt;a href=&quot;https
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Dealing with Set-Output Depreciation Warnings in Terraform github-actions</title>
    <link href="https://westerndevs.com/_/set-output-terraform/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/set-output-terraform/</id>
    <published>2022-11-01T04:00:00.000Z</published>
    <updated>2024-01-29T19:23:30.965Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>I've got a build that is running terraform on github actions (I actually have loads of them) and I've been noticing that they are very chatty about warnings now.</p><p><img src="/images/2022-11-01-set-output-terraform.md/2022-11-01-06-46-18.png" alt="">)</p><p>The warning is</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">The </span>`<span class="built_in">set-output`</span> <span class="string">command </span><span class="string">is </span><span class="string">deprecated </span><span class="string">and </span><span class="string">will </span><span class="string">be </span><span class="string">disabled </span><span class="string">soon.</span> <span class="string">Please </span><span class="string">upgrade </span><span class="string">to </span><span class="string">using </span><span class="string">Environment </span><span class="string">Files.</span> <span class="string">For </span><span class="string">more </span><span class="string">information </span><span class="string">see:</span> <span class="string">https:</span>//<span class="string">github.</span><span class="string">blog/</span><span class="string">changelog/</span><span class="string">2022-10-</span><span class="string">11-github-</span><span class="string">actions-deprecating-</span><span class="string">save-state-</span><span class="string">and-set-</span><span class="string">output-commands/</span></span><br></pre></td></tr></table></figure><p>The history here without reading that link is basically that github are changing how we push variables to the pipeline for use in later steps. There were some security implications with the old approach and the new approach should be better</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Save</span> <span class="string">variable</span></span><br><span class="line">  <span class="attr">run:</span> <span class="string">echo</span> <span class="string">"SOMENAME=PICKLE"</span> <span class="string">&gt;&gt;</span> <span class="string">$GITHUB_STATE</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Set</span> <span class="string">output</span></span><br><span class="line">  <span class="attr">run:</span> <span class="string">echo</span> <span class="string">"SOMENAME=PICKLE"</span> <span class="string">&gt;&gt;</span> <span class="string">$GITHUB_OUTPUT</span></span><br></pre></td></tr></table></figure><p>Problem was that the steps on which I was having trouble didn't obviously use the <code>set-output</code> command.</p>  <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="string">...</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Init</span> <span class="string">Terraform</span></span><br><span class="line">  <span class="attr">run:</span> <span class="string">terraform</span> <span class="string">init</span> </span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Validate</span> <span class="string">Terraform</span></span><br><span class="line">  <span class="attr">run:</span> <span class="string">terraform</span> <span class="string">validate</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure><p>I had to dig a bit to find out that it was actually the <code>terraform</code> command that was causing the problem. See as part of the build I install the terraform cli using the</p>  <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">HashiCorp</span> <span class="bullet">-</span> <span class="string">Setup</span> <span class="string">Terraform</span></span><br><span class="line">  <span class="attr">uses:</span> <span class="string">hashicorp/setup-terraform@v2.0.2</span></span><br><span class="line">  <span class="attr">with:</span></span><br><span class="line">      <span class="attr">terraform_version:</span> <span class="number">1.1</span><span class="number">.9</span></span><br><span class="line">      <span class="attr">terraform_wrapper:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>Turns out that as of writing the latest version of the wrapper installed by the setup-terraform task makes use of an older version of the <code>@actions/core</code> package. This package is what is used to set the output and before version 1.10 it did so using <code>set-output</code>. A fix has been merged into the setup-terraform project but no update released yet.</p><p>For now I found that I had no need for the wrapper so I disabled it with</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">HashiCorp</span> <span class="bullet">-</span> <span class="string">Setup</span> <span class="string">Terraform</span></span><br><span class="line">  <span class="attr">uses:</span> <span class="string">hashicorp/setup-terraform@v2.0.2</span></span><br><span class="line">  <span class="attr">with:</span></span><br><span class="line">      <span class="attr">terraform_version:</span> <span class="number">1.1</span><span class="number">.9</span></span><br><span class="line">      <span class="attr">terraform_wrapper:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>but for future readers if there is a more recent version of setup-terraform than 2.0.2 then you can update to that to remove the warnings. Now my build is clean</p><p><img src="/images/2022-11-01-set-output-terraform.md/2022-11-01-06-57-27.png" alt="">)</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;I&#39;ve got a build that is running terraform on github actions (I actually have loads of them) and I&#39;ve been noticing that they are very ch
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">My Theory of GitHub Actions and IaC</title>
    <link href="https://westerndevs.com/_/theory-of-terraform-github-actions/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/theory-of-terraform-github-actions/</id>
    <published>2022-11-01T04:00:00.000Z</published>
    <updated>2024-01-29T19:23:30.969Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>I do all sorts of random work and one of those is helping out on some infrastructure deployments on Azure. Coming from a development background I'm allergic to clicking around inside an Azure website to configure things in a totally non-repeatable way. So I've been using Terraform to do the deployments. We have built up a pretty good history of using Terraform  - today I might use Pulumi instead but the actual tool isn't all that important as opposed to the theory.</p><p>What I'm looking to achieve is a number of things</p><ol><li>Make deployments easy for people to do</li><li>Make deployments repeatable - we should be able to us the same deployment scripts to set up a dev enviornment or recover from a disaster with minimal effort</li><li>Ensure that changes are reviewed before they are applied</li></ol><p>To meet these requirements a build pipeline in GitHub actions (or Azure DevOps, for that matter) is an ideal fit. We maintain our Terraform scripts in a repository. Typically we use one repository per resource group but your needs may vary around that. There isn't any monetary cost to having multiple repositories but there can be some cognitive load to remembering where the right repository is (more on that later).</p><h2>Source Code</h2><p>Changes to the infrastructure definition code are checked into a shared repository. Membership over this code is fairly relaxed. Developers and ops people can all make changes to the code. We strive to make use of normal code review approaches when checking in changes. We're not super rigorous about changes which are checked in because many of the people checking in changes have ops backgrounds and aren't all that well versed in the PR process. I want to make this as easy for them as possible so they aren't tempted to try to make changes directly in Azure.</p><p>In my experience there is a very strong temptation for people to abandon rigour when a change is needed at once to address a business need. We need to change a firewall rule - no time to review that let's just do it. I'm not saying that this is a good thing but it is a reality. Driving people to the Terraform needs to be easy. Having their ad-hoc changes overwritten by a Terraform deploy will also help drive the point home. Stick and carrot.</p><h2>Builds</h2><p>A typical build pipeline for us will include 3 stages.</p><p><img src="/images/2022-11-01-theory-of-terraform-github.-actions.md/2022-11-01-07-22-50.png" alt="">)</p><p>The build step runs on a checkin trigger. This will run an initial build step which validates the terraform scripts are syntactically correct and well linted. A small number of our builds stop here. Unlike application deployments we typically want these changes to be live right away or at most during some maintenance window shortly after the changes have been authored. That deployments are run close to the time the changes were authored helps with our lack of rigour around code reviews.</p><p>The next stage is to preview what changes will be performed by Terraform. This stage is gated such that it need somebody to actually approve it. It is low risk because no changes to made - we run a <code>terraform plan</code> and see what changes will be made. Reading over these changes is very helpful because we often catch unintended consequences here. Accidentally destroying and recreating a VM instead of renaming it? Caught here. Removing a tag that somebody manually applied to a resource and that should be preserved? Caught here.</p><p><img src="/images/2022-11-01-theory-of-terraform-github.-actions.md/2022-11-01-07-45-43.png" alt="">)</p><p>The final stage in the pipeline is to run the Terraform changes. This step is also gated to prevent us from deploying it without proper approvals. Depending on the environment we might need 2 approvals or at least one approval that isn't the person writing the change. More eyes on a change will catch problems more easily and also socialize changes so that it isn't a huge shock to the entire ops team that we now have a MySQL server in the enviornment or whatever it may be.</p><h2>Tags</h2><p>Most Azure resources support tagging. These are basically just labels that you can apply to resources. We use tags to help us organize our resources. We have a tag called <code>environment</code> which is used to indicate what environment the resource is in. We have a tag called <code>owner</code> which is used to indicate who owns the resource. We have a tag called <code>project</code> which is used to indicate what project the resource is associated with. But for these builds the most important tags are <code>IaC Technology</code> and <code>IaC Source</code>. The first is used to tell people that the resources are part of a Terraform deployment. The second is used to indicate where on GitHub the Terraform scripts are located. These tags make it really easy for people to find the Terraform scripts for a resource and get a change in place.</p><p><img src="/images/2022-11-01-theory-of-terraform-github.-actions.md/2022-11-01-07-33-43.png" alt="">)</p><h2>Permissions</h2><p>I mentioned earlier that we like to guide ops people to make enviornment changes in Terraform rather than directly in Azure. One of the approaches we take around that is to not grant owner or writer permissions to resources directly to people be they ops or dev. Instead we have a number of permission restricted service principals that are used to make changes to resources. These service principals are granted permissions to specific resource groups and these service principals are what's used in the pipeline to make the changes. This means that if somebody wants to make a change to a resource they need to go through the Terraform pipeline.</p><p>We keep the client id and secret in the secrets of the github pipeline</p><p><img src="/images/2022-11-01-theory-of-terraform-github.-actions.md/2022-11-01-07-42-51.png" alt="">)</p><p>In this example we just keep a single repository wide key because we only have one enviornment. We'd make use of enviornment specific secrets if we had more than one environment.</p><p>This approach has the added bonus of providing rip stops in the event that we leak some keys somewhere. At worst that service principal has access only to one resource group so an attacker is limited to being able to mess with that group and not escape to the larger enviornment.</p><h2>Achieving our Goals</h2><p>To my mind this approach is exactly how IaC was meant to be used. We have a single source of truth for our infrastructure. We can make changes to that infrastructure in a repeatable way. We can review those changes before they are applied. All this while keeping the barrier to entry low for people who are not familiar with the code review process.</p><h2>Future Steps</h2><p>We already make use of Terraform modules for most of our deployment but we're not doing a great job of reusing these modules from project to project. We're hoping to keep a library of these modules around which can help up standardize things. For instance our VM module doesn't just provision a VM - it sets up backups and uses a standardized source image.</p><p>I also really like the idea of using the build pipeline to annotate pull requests with the Terraform changes using https://github.com/marketplace/actions/terraform-pr-commenter. Surfacing this directly on the PR would save the reviewers the trouble of going through the pipeline to see what changes are being made. However it would be added friction for our ops team as they'd have to set up PRs.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;I do all sorts of random work and one of those is helping out on some infrastructure deployments on Azure. Coming from a development back
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Registering Terraform Providers</title>
    <link href="https://westerndevs.com/_/register-providers/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/register-providers/</id>
    <published>2022-08-12T04:00:00.000Z</published>
    <updated>2024-01-29T19:23:30.965Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>If you're setting up a new Terraform project on Azure you might find yourself needing to register providers if you're running with an identity that doesn't have wide ranging access to the subscription. I ran into this today with the error</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">│ Error: Error ensuring Resource Providers are registered.</span><br><span class="line">│ </span><br><span class="line">│ Terraform automatically attempts to register the Resource Providers it supports to</span><br><span class="line">│ ensure it's able to provision resources.</span><br><span class="line">│ </span><br><span class="line">│ If you don't have permission to register Resource Providers you may wish to <span class="keyword">use</span> the</span><br><span class="line">│ <span class="string">"skip_provider_registration"</span> flag <span class="keyword">in</span> the Provider <span class="keyword">block</span> <span class="keyword">to</span> <span class="keyword">disable</span> this functionality.</span><br><span class="line">│ </span><br><span class="line">│ Please note that <span class="keyword">if</span> you opt <span class="keyword">out</span> <span class="keyword">of</span> <span class="keyword">Resource</span> Provider Registration <span class="keyword">and</span> Terraform tries</span><br><span class="line">│ <span class="keyword">to</span> provision a <span class="keyword">resource</span> <span class="keyword">from</span> a <span class="keyword">Resource</span> Provider which <span class="keyword">is</span> unregistered, <span class="keyword">then</span> the <span class="keyword">errors</span></span><br><span class="line">│ may appear misleading - <span class="keyword">for</span> example:</span><br><span class="line">│ </span><br><span class="line">│ &gt; API <span class="keyword">version</span> <span class="number">2019</span>-XX-XX was <span class="keyword">not</span> <span class="keyword">found</span> <span class="keyword">for</span> Microsoft.Foo</span><br><span class="line">│ </span><br><span class="line">│ Could indicate either that the <span class="keyword">Resource</span> Provider <span class="string">"Microsoft.Foo"</span> requires registration,</span><br><span class="line">│ but this could also indicate that this Azure Region doesn<span class="string">'t support this API version.</span></span><br><span class="line"><span class="string">│ </span></span><br><span class="line"><span class="string">│ More information on the "skip_provider_registration" flag can be found here:</span></span><br><span class="line"><span class="string">│ https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs#skip_provider_registration</span></span><br><span class="line"><span class="string">│ </span></span><br><span class="line"><span class="string">│ Original Error: Cannnot register providers: Microsoft.StoragePool. Errors were: Cannot register provider Microsoft.StoragePool with Azure Resource Manager: resources.ProvidersClient#Register: Failure responding to request: StatusCode=403 -- Original Error: autorest/azure: Service returned an error. Status=403 Code="AuthorizationFailed" Message="The client '</span>************<span class="string">' with object id ''************'' does not have authorization to perform action '</span>Microsoft.StoragePool/<span class="keyword">register</span>/<span class="keyword">action</span><span class="string">' over scope '</span>/subscriptions<span class="comment">/***' or the scope is invalid. If access was recently granted, please refresh your credentials.".</span></span><br><span class="line"><span class="comment">│ </span></span><br><span class="line"><span class="comment">│   with provider["registry.terraform.io/hashicorp/azurerm"],</span></span><br><span class="line"><span class="comment">│   on environment.tf line 21, in provider "azurerm":</span></span><br><span class="line"><span class="comment">│   21: provider "azurerm" &#123;</span></span><br></pre></td></tr></table></figure><p>The account running terraform in my github actions pipeline is restricted to only have contributor over the resource group into which I'm deploying so it's unable to properly set up providers. Two things needed to fix it:</p><ol><li>Tell terraform to not try to register providers</li><li>Register the providers manually</li></ol><p>For 1 the provider block in the terraform file needs to be updated to look like</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  <span class="attribute">provider</span> <span class="string">"azurerm"</span> &#123;</span><br><span class="line">    <span class="section">features</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">skip_provider_registration</span> = <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>For 2 it requires logging into the azure portal and registering the providers manually. Go to the subscription and select <code>Resource Providers</code> then search for the one you need, select it and hit <code>Register</code>. In my case the provider was already registered and the problem was just Terraform's attempt to register it without sufficient permission.</p><p><img src="/images/2022-08-11-register_providers.md/2022-08-11-07-07-29.png" alt="">)</p><pre><code></code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;If you&#39;re setting up a new Terraform project on Azure you might find yourself needing to register providers if you&#39;re running with an ide
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Debugging Azure Container Instance Startup</title>
    <link href="https://westerndevs.com/_/debug-azure-container-instances-startup/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/debug-azure-container-instances-startup/</id>
    <published>2022-08-04T04:00:00.000Z</published>
    <updated>2024-01-29T19:23:30.961Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>I have some container instances which are failing to start up properly and the logs in the portal are blank. This makes debugging them kind of difficult.</p><p>On the command line running</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">az container logs -g &lt;resource group name&gt; -n &lt;container group name&gt; --container &lt;container name&gt;</span><br></pre></td></tr></table></figure><p>Just gave me an output of <code>None</code>. Not useful either.</p><p>Fortunately, you can attach directly to the logs streams coming out of the container which will give you a better idea of what is going on.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">az container attach -g &lt;resource group name&gt; -n &lt;container group name&gt; --container &lt;container name&gt;</span><br></pre></td></tr></table></figure><p>This was able to give me output like</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Start</span> streaming <span class="keyword">logs</span>:</span><br><span class="line">/usr/<span class="keyword">local</span>/lib/python3<span class="number">.9</span>/site-packages/environ/environ.py:<span class="number">628</span>: UserWarning: /ric-api/core/.env doesn<span class="string">'t exist - if you'</span>re <span class="keyword">not</span> configuring your environment separately, <span class="keyword">create</span> one.</span><br><span class="line">  warnings.warn(</span><br><span class="line">Traceback (most recent <span class="keyword">call</span> <span class="keyword">last</span>):</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/lib/python3.9/site-packages/environ/environ.py"</span>, line <span class="number">273</span>, <span class="keyword">in</span> get_value</span><br><span class="line">    <span class="keyword">value</span> = self.ENVIRON[<span class="keyword">var</span>]</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/lib/python3.9/os.py"</span>, line <span class="number">679</span>, <span class="keyword">in</span> __getitem__</span><br><span class="line">    <span class="keyword">raise</span> KeyError(<span class="keyword">key</span>) <span class="keyword">from</span> <span class="keyword">None</span></span><br><span class="line">KeyError: <span class="string">'DB_PORT'</span></span><br><span class="line"></span><br><span class="line">During handling <span class="keyword">of</span> the above <span class="keyword">exception</span>, another <span class="keyword">exception</span> occurred:</span><br><span class="line"></span><br><span class="line">Traceback (most recent <span class="keyword">call</span> <span class="keyword">last</span>):</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/ric-api/manage.py"</span>, line <span class="number">22</span>, <span class="keyword">in</span> &lt;<span class="keyword">module</span>&gt;</span><br><span class="line">    <span class="keyword">main</span>()</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/ric-api/manage.py"</span>, line <span class="number">18</span>, <span class="keyword">in</span> <span class="keyword">main</span></span><br><span class="line">    execute_from_command_line(sys.argv)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/lib/python3.9/site-packages/django/core/management/__init__.py"</span>, line <span class="number">419</span>, <span class="keyword">in</span> execute_from_command_line</span><br><span class="line">    utility.execute()</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/lib/python3.9/site-packages/django/core/management/__init__.py"</span>, line <span class="number">413</span>, <span class="keyword">in</span> <span class="keyword">execute</span></span><br><span class="line">    self.fetch_command(subcommand).run_from_argv(self.argv)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/lib/python3.9/site-packages/django/core/management/base.py"</span>, line <span class="number">354</span>, <span class="keyword">in</span> run_from_argv</span><br><span class="line">    self.execute(*args, **cmd_options)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/lib/python3.9/site-packages/django/core/management/commands/runserver.py"</span>, line <span class="number">61</span>, <span class="keyword">in</span> <span class="keyword">execute</span></span><br><span class="line">    super().execute(*args, **options)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/lib/python3.9/site-packages/django/core/management/base.py"</span>, line <span class="number">398</span>, <span class="keyword">in</span> <span class="keyword">execute</span></span><br><span class="line">    <span class="keyword">output</span> = self.handle(*args, **options)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/lib/python3.9/site-packages/django/core/management/commands/runserver.py"</span>, line <span class="number">68</span>, <span class="keyword">in</span> handle</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> settings.DEBUG <span class="keyword">and</span> <span class="keyword">not</span> settings.ALLOWED_HOSTS:</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/lib/python3.9/site-packages/django/conf/__init__.py"</span>, line <span class="number">82</span>, <span class="keyword">in</span> __getattr__</span><br><span class="line">    self._setup(<span class="keyword">name</span>)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/lib/python3.9/site-packages/django/conf/__init__.py"</span>, line <span class="number">69</span>, <span class="keyword">in</span> _setup</span><br><span class="line">    self._wrapped = <span class="keyword">Settings</span>(settings_module)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/lib/python3.9/site-packages/django/conf/__init__.py"</span>, line <span class="number">170</span>, <span class="keyword">in</span> __init__</span><br><span class="line">    <span class="keyword">mod</span> = importlib.import_module(self.SETTINGS_MODULE)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/lib/python3.9/importlib/__init__.py"</span>, line <span class="number">127</span>, <span class="keyword">in</span> import_module</span><br><span class="line">    <span class="keyword">return</span> _bootstrap._gcd_import(<span class="keyword">name</span>[<span class="keyword">level</span>:], <span class="keyword">package</span>, <span class="keyword">level</span>)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"&lt;frozen importlib._bootstrap&gt;"</span>, line <span class="number">1030</span>, <span class="keyword">in</span> _gcd_import</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"&lt;frozen importlib._bootstrap&gt;"</span>, line <span class="number">1007</span>, <span class="keyword">in</span> _find_and_load</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"&lt;frozen importlib._bootstrap&gt;"</span>, line <span class="number">986</span>, <span class="keyword">in</span> _find_and_load_unlocked</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"&lt;frozen importlib._bootstrap&gt;"</span>, line <span class="number">680</span>, <span class="keyword">in</span> _load_unlocked</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"&lt;frozen importlib._bootstrap_external&gt;"</span>, line <span class="number">850</span>, <span class="keyword">in</span> exec_module</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"&lt;frozen importlib._bootstrap&gt;"</span>, line <span class="number">228</span>, <span class="keyword">in</span> _call_with_frames_removed</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/ric-api/core/settings.py"</span>, line <span class="number">114</span>, <span class="keyword">in</span> &lt;<span class="keyword">module</span>&gt;</span><br><span class="line">    <span class="string">'PORT'</span>: env(<span class="string">'DB_PORT'</span>),</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/lib/python3.9/site-packages/environ/environ.py"</span>, line <span class="number">123</span>, <span class="keyword">in</span> __call__</span><br><span class="line">    <span class="keyword">return</span> self.get_value(<span class="keyword">var</span>, <span class="keyword">cast</span>=<span class="keyword">cast</span>, <span class="keyword">default</span>=<span class="keyword">default</span>, parse_default=parse_default)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"/usr/local/lib/python3.9/site-packages/environ/environ.py"</span>, line <span class="number">277</span>, <span class="keyword">in</span> get_value</span><br><span class="line">    <span class="keyword">raise</span> ImproperlyConfigured(error_msg)</span><br><span class="line">django.core.exceptions.ImproperlyConfigured: <span class="keyword">Set</span> the DB_PORT environment <span class="keyword">variable</span></span><br><span class="line"><span class="number">2022</span><span class="number">-07</span><span class="number">-14</span>T14:<span class="number">37</span>:<span class="number">17.6003172</span>Z stderr F</span><br><span class="line"></span><br><span class="line"><span class="keyword">Exception</span> <span class="keyword">in</span> <span class="keyword">thread</span> <span class="keyword">Thread</span><span class="number">-1</span>:</span><br><span class="line">Traceback (most recent <span class="keyword">call</span> <span class="keyword">last</span>):</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"threading.py"</span>, line <span class="number">932</span>, <span class="keyword">in</span> _bootstrap_inner</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"threading.py"</span>, line <span class="number">870</span>, <span class="keyword">in</span> run</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"D:\a\1\s\build_scripts\windows\artifacts\cli\Lib\site-packages\azure/cli/command_modules/container/custom.py"</span>, line <span class="number">837</span>, <span class="keyword">in</span> _stream_container_events_and_logs</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"D:\a\1\s\build_scripts\windows\artifacts\cli\Lib\site-packages\azure/cli/command_modules/container/custom.py"</span>, line <span class="number">791</span>, <span class="keyword">in</span> _stream_logs</span><br><span class="line">AttributeError: <span class="string">'NoneType'</span> <span class="keyword">object</span> has <span class="keyword">no</span> <span class="keyword">attribute</span> <span class="string">'split'</span></span><br></pre></td></tr></table></figure><p>Looks like I missed adding a <code>DB_PORT</code> to the environmental variables</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;I have some container instances which are failing to start up properly and the logs in the portal are blank. This makes debugging them ki
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Consuming SOAP Services in .NET Core</title>
    <link href="https://westerndevs.com/_/consuming-wsdl/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/consuming-wsdl/</id>
    <published>2022-05-30T04:00:00.000Z</published>
    <updated>2024-01-29T19:23:30.961Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>Today I ran into the need to consume an older SOAP web service in .NET Core. I was really fortunate in my timing because Core WCF was just released and it makes the whole process much easier.</p><p>Taking a step back for you youngsters out there SOAP was the service communication technology that existed before REST showed up with its JSON and ate everybody's lunch. SOAP is really just the name for the transport mechanism but I think most of us would refer to the whole method of invoking remote procedures over the web as <code>SOAP Web Services</code>. SOAP, or Simple Object Access Protocol, is an XML-based standard for serializing objects from various different languages in a way that Java could talk to .NET could talk to Python. Unlike JSON it was a pretty well thought out protocol and had standard representations of things like dates which JSON just kind of ignores.</p><p>Web services were closer to a remote method invocation in that you would call something like <code>GetUserId</code> rather than the RESTful approach of hitting an endpoint like <code>/Users/7</code> to get a user with Id 7. The endpoints which were provided by a Web Service were usually written down in a big long XML document called a WSDL which stands for Web Service Definition Language.</p><p>Web services gained a reputation for being very enterprisy and complex. There were a large number of additional standards defined around it which are commonly known as ws-*. These include such things as WS-Discovery, WS-Security, WS-Policy and, my personal favorite, the memorably named Web Single Sign-On Metadata Exchange Protocol.</p><h2>Core WCF</h2><p>In the last month we've seen the 1.0 release of <a href="https://devblogs.microsoft.com/dotnet/corewcf-v1-released/" target="_blank" rel="noopener">Core WCF</a> which I'm pretty certain I mocked at being a silly thing in which to invest resources. Tables have turned now I'm the one who needs it so thank to <a href="https://twitter.com/coolcsh" target="_blank" rel="noopener">Scott Hunter</a> or whoever it was that allocated resources to developing this.</p><p>To get started I needed to find the WSDLs for the services I wanted. This required a call to the support department of the company providing the services. The had a .NET library they pointed me to but it was compiled against .NET 4.5 so I wanted to refresh it. Fortunately the Core WCF release includes an updated <code>svcutil</code>. This tool will read a WSDL and generate service stubs in .NET for you.</p><p>I started with a new console project</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet new console</span><br></pre></td></tr></table></figure><p>Then installed the dotnet-svcutil tool globally (you only need to do this once) and generated a service reference</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dotnet tool install --global dotnet-svcutil</span><br><span class="line">dotnet-svcutil --roll-forward LatestMajor https://energydataservices.ihsenergy.com/services/v2/searchservice.svc</span><br></pre></td></tr></table></figure><p>This updated my project's csproj file to include a whole whack of new library references</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Project</span> <span class="attr">Sdk</span>=<span class="string">"Microsoft.NET.Sdk"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">PropertyGroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">OutputType</span>&gt;</span>Exe<span class="tag">&lt;/<span class="name">OutputType</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TargetFramework</span>&gt;</span>net6.0<span class="tag">&lt;/<span class="name">TargetFramework</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RootNamespace</span>&gt;</span>wsdl_test<span class="tag">&lt;/<span class="name">RootNamespace</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImplicitUsings</span>&gt;</span>enable<span class="tag">&lt;/<span class="name">ImplicitUsings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Nullable</span>&gt;</span>enable<span class="tag">&lt;/<span class="name">Nullable</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">PropertyGroup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ItemGroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">DotNetCliToolReference</span> <span class="attr">Include</span>=<span class="string">"dotnet-svcutil"</span> <span class="attr">Version</span>=<span class="string">"1.0.*"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ItemGroup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ItemGroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">PackageReference</span> <span class="attr">Include</span>=<span class="string">"CoreWCF.Http"</span> <span class="attr">Version</span>=<span class="string">"1.0.0"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">PackageReference</span> <span class="attr">Include</span>=<span class="string">"CoreWCF.Primitives"</span> <span class="attr">Version</span>=<span class="string">"1.0.0"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Reference</span> <span class="attr">Include</span>=<span class="string">"System.ServiceModel"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">HintPath</span>&gt;</span>System.ServiceModel<span class="tag">&lt;/<span class="name">HintPath</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Reference</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ItemGroup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ItemGroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">PackageReference</span> <span class="attr">Include</span>=<span class="string">"System.ServiceModel.Duplex"</span> <span class="attr">Version</span>=<span class="string">"4.8.*"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">PackageReference</span> <span class="attr">Include</span>=<span class="string">"System.ServiceModel.Http"</span> <span class="attr">Version</span>=<span class="string">"4.8.*"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">PackageReference</span> <span class="attr">Include</span>=<span class="string">"System.ServiceModel.NetTcp"</span> <span class="attr">Version</span>=<span class="string">"4.8.*"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">PackageReference</span> <span class="attr">Include</span>=<span class="string">"System.ServiceModel.Security"</span> <span class="attr">Version</span>=<span class="string">"4.8.*"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ItemGroup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>It also generated a 13 000 line long service reference file in the project. Wowzers. I'm glad I don't have to write that fellow myself.</p><p>With that all generated I'm now able to call methods in that service by just doing</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> ServiceReference;</span><br><span class="line"><span class="keyword">var</span> client = <span class="keyword">new</span> SearchServiceClient();</span><br><span class="line"><span class="keyword">var</span> result = <span class="keyword">await</span> client.SomeMethodAsync();</span><br></pre></td></tr></table></figure><p>This example really only scratches the surface of what the new Core WCF brings to .NET Core. I certainly wouldn't want to develop new WCF services but for consuming existing ones or even updating existing ones then this library is going to be a great boost to productivity.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Today I ran into the need to consume an older SOAP web service in .NET Core. I was really fortunate in my timing because Core WCF was jus
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Azure Functions Provider Error</title>
    <link href="https://westerndevs.com/_/azure-functions-error/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/azure-functions-error/</id>
    <published>2022-04-07T04:00:00.000Z</published>
    <updated>2024-01-29T19:23:30.961Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>I started up a previously working Azure functions project today that I hadn't touched in a week. It failed to start with an error like this</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">A host <span class="builtin-name">error</span> has occurred during startup operation <span class="string">'b59ba8b8-f264-4274-a9eb-e17ba0e02ed8'</span>.</span><br><span class="line">api: Could <span class="keyword">not</span> load file <span class="keyword">or</span> assembly <span class="string">'Microsoft.Extensions.Options, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'</span>. The<span class="built_in"> system </span>cannot <span class="builtin-name">find</span> the file specified.</span><br><span class="line">Value cannot be <span class="literal">null</span>. (Parameter <span class="string">'provider'</span>)</span><br></pre></td></tr></table></figure><p>This is the sort of error that terrifies me. Something is wrong but who knows what. No changes in git and an infinity of generic errors on google for <code>Could not load file or assembly</code>. Eventually after some digging it seems like I might be suffering from some corrupted tooling (some hints about that here: https://github.com/Azure/azure-functions-core-tools/issues/2232). I was able to fix mine by downloading the latest version of the tooling from https://docs.microsoft.com/en-us/azure/azure-functions/functions-run-local?tabs=v4%2Cwindows%2Ccsharp%2Cportal%2Cbash</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;I started up a previously working Azure functions project today that I hadn&#39;t touched in a week. It failed to start with an error like th
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Which SQL Hosting Option is Right for Me?</title>
    <link href="https://westerndevs.com/_/which-sql-server-edition/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/which-sql-server-edition/</id>
    <published>2022-04-07T04:00:00.000Z</published>
    <updated>2024-01-29T19:23:30.969Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<p>There are a bunch of different ways to host SQL Server workloads on Azure. Answering some questions about how you use SQL server can help guide us to picking the right option for you.</p><p>The 3 options for hosting we're considering are</p><ol><li>SQL Azure - https://azure.microsoft.com/en-us/products/azure-sql/database/#overview</li><li>Azure SQL Managed Instance - https://azure.microsoft.com/en-us/products/azure-sql/managed-instance/</li><li>SQL Server on VM - https://azure.microsoft.com/en-us/services/virtual-machines/sql-server/#overview</li></ol><p>I've listed these in my order of preference. I'd rather push people to a more managed solution than a less managed one. There is a huge shortage of SQL server skills out there so if you can take a more managed approach then you're less likely to run into problems that require you finding an SQL expert. I frequently say to companies that they're not in the business of managing SQL server but in the business of building whatever widgets they build. Unless there is a real need don't waste company resources building custom solutions when you can buy a 90% solution off the shelf.</p><p>When I talk with companies about migrating their existing workloads to the cloud from on premise SQL servers I find myself asking these questions:</p><ol><li>Does your solution use cross database joins?</li><li>Does your solution make use of the SQL Agent to run jobs?</li><li>Does your solution use FILESTREAM to access files on disk?</li><li>Does your solution require fine tuning of availability groups?</li><li>Does your solution require SQL logins from <code>CERTIFICATE</code>, <code>ASYMMETRIC KEY</code> or <code>SID</code>?</li><li>Do you need to make use of a compatibility level below 100?</li><li>Do you need to make use of database mirroring?</li><li>Does your solution need to start and stop job scheduling?</li><li>Are you making use of SQL Server Reporting Services (SSRS)?</li><li>Are you using xp_cmdshell anywhere in your application (https://docs.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/xp-cmdshell-transact-sql?view=sql-server-ver15)</li></ol><p>If the answer to any of the first 3 questions is <code>yes</code> then they can't easily use SQL Azure* and should set the baseline to a managed instance. If the answer to any of the rest of the questions is <code>yes</code> then they should set the baseline to a VM running a full on version of SQL Server. Only if the answer to all these questions is <code>no</code> is SQL Azure the best solution.</p><ul><li>Cross database joins and SQL Agent can be replaced by Elastic Query and Elastic Jobs but neither one is an easy drop in replacement so I typically don't bother directing people to them for time constrained migrations.</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;There are a bunch of different ways to host SQL Server workloads on Azure. Answering some questions about how you use SQL server can help
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title type="html">Redis Cheat Sheet</title>
    <link href="https://westerndevs.com/_/cheat-sheet/" rel="alternate" type="text/html"/>
    <id>https://westerndevs.com/_/cheat-sheet/</id>
    <published>2022-04-04T04:00:00.000Z</published>
    <updated>2024-01-29T19:23:30.961Z</updated>
	<author>
	
	  
	  <name>Simon Timms</name>
	  <email>stimms@gmail.com</email>
	
	  <uri>https://westerndevs.com</uri>
	</author>
    
    <content type="html"><![CDATA[<h2>Running in Docker</h2><p>Quickly get started with</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name somename -p <span class="number">6379</span>:<span class="number">6379</span> redis</span><br></pre></td></tr></table></figure><h2>Connection</h2><p>The simplest connection string is to use <code>localhost</code> which just connects to the localhost on port 6379.</p><h2>Querying</h2><p>Redis is a really simple server to which you can just telnet (or use the redis-cli) to run commands.</p><p><strong>List All Keys</strong></p><p>This might not be a great idea against a prod server with lots of keys</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">keys</span> *</span><br></pre></td></tr></table></figure><p><strong>Get key type</strong></p><p>Redis supports a bunch of different data primatives like a simple key value, a list, a hash, a zset, ... to find the type of a key use <code>type</code></p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="type">HereForElizabethAnneSlovak</span></span><br><span class="line"><span class="type">+zset</span></span><br></pre></td></tr></table></figure><p><strong>Set key value</strong></p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> blah <span class="comment">7</span></span><br></pre></td></tr></table></figure><p>This works for updates too</p><p><strong>Get key value</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">get</span> blah</span><br></pre></td></tr></table></figure><p><strong>Get everything in a zset</strong></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZRANGE <span class="string">"id"</span> <span class="number">0</span> <span class="number">-1</span></span><br></pre></td></tr></table></figure><p><strong>Count everything in a zset</strong></p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zcount HereForjohnrufuscolginjr. -<span class="literal">inf</span> +<span class="literal">inf</span></span><br></pre></td></tr></table></figure><p><strong>Get the first thing in a zset</strong></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZRANGE <span class="string">"id"</span> <span class="number">0</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p><strong>Get everything in a set</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">SMEMBERS HereFeedHashTags</span></span><br></pre></td></tr></table></figure><p><strong>Get the first member of a list</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">LPOP somekey</span></span><br></pre></td></tr></table></figure><p><strong>Get the last member of a list</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">RPOP somekey</span></span><br></pre></td></tr></table></figure><p><strong>Get the contents of a hash</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">HGETALL somekey</span></span><br></pre></td></tr></table></figure><p><strong>Clear out the whole database</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">FLUSHALL</span></span><br></pre></td></tr></table></figure><p><strong>Clear just the current db</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">FLUSHDB</span></span><br></pre></td></tr></table></figure><p><strong>Stats on keys</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">INFO</span> keyspace</span><br></pre></td></tr></table></figure><p><strong>Get an idea of db size</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">INFO</span> Memory</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2&gt;Running in Docker&lt;/h2&gt;
&lt;p&gt;Quickly get started with&lt;/p&gt;
&lt;figure class=&quot;highlight angelscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span cl
    
    </summary>
    
    
  </entry>
  
</feed>
